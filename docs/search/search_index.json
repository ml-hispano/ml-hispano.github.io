{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ML-Hispano \u00b6 \u00danete la comunidad Machine Learning Hispano la comunidad m\u00e1s grande en habla hispana. Si tu tambi\u00e9n quieres formar parte de esta comunidad, entra a nuestro Slack a trav\u00e9s del bot\u00f3n rosa o en este link Slack ML-Hispano . Comunidad ML-Hispano \u00b6 Este repositorio se representa en l\u00ednea en Comunidad ML-Hispano . MLH Web Site \u00b6 Proyectos \u00b6 \u00bfPor qu\u00e9 unirte? \u00b6 Forma parte de un gran grupo de personas que quieren aprender a su manera con los recursos de #2_recursos-y-papers desde cero #2_principiantes y preguntar cuanto necesiten #2_preguntas-y-dudas o que buscan hacerlo de manera tradicional #2_formacion_universit Que buscan hacer proyectos para disfrutar y aprender #3_banco_de_proyectos poni\u00e9ndose a prueba #3_competici\u00f3n_kaggle con el mejor entorno posible #4_ordenadores-hardwar y estar listos para el salto laboral #2_ofertas-de-empleo . Sea cual sea tu rama #4_modelos-generativos , #4_computer_vision , #4_electr\u00f3nica-rob\u00f3tic , #4_deep-reinf-learn , #4_nlp-mas-ml seguro encuentras tu lugar en esta gran familia. \u00bfA qu\u00e9 esperas? Empieza present\u00e1ndote en #0_pres\u00e9ntate y elige el mejor canal o canales para continuar. Y si quieres ir un paso m\u00e1s all\u00e1, participa en los canales especiales #x_desarrollo-interno donde podr\u00e1s participar en el dise\u00f1o de la infraestructura de la comunidad o en #5_offtopic el canal m\u00e1s gamberro en el que compartir memes y todo aquello que se te ocurra. Listado de canales \u00b6 Canales a los que puedes unirte: #0_anuncios_y_mejoras \u00b6 \u00bfSe te ocurre una idea para mejorar esta comunidad?\u00bfEchas en falta alg\u00fan canal o crees que hace falta implementar una nueva funcionalidad? \u00a1Utilicemos este canal para discutir sobre ideas que ayuden a mejorar esta comunidad! Creado por DotCSV el 31 de diciembre de 2018 #0_bienvenido_a_mlh \u00b6 En este canal se har\u00e1n todos los anuncios importantes relacionados con la comunidad, al igual que se listar\u00e1n las reglas aplicadas a este foro. Creado por DotCSV el 22 de diciembre de 2018 #0_pres\u00e9ntate \u00b6 \u00bfQui\u00e9n eres? \u00bfQu\u00e9 \u00e1rea de Machine Learning te interesa m\u00e1s? \u00bfQu\u00e9 puedes aportar a esta comunidad? \u00bfEst\u00e1s en RRSS? La tortilla... \u00bfCon o sin pi\u00f1a? Pres\u00e9ntate y deja un buena impresi\u00f3n Creado por DotCSV el 31 de diciembre de 2018 #1_chat-general \u00b6 Creado por DotCSV el 1 de enero de 2019 #1_women-in-ml \u00b6 Canal dedicado para las mujeres de la comunidad y cient\u00edficas de datos Creado por iris9112 el 4 de enero de 2019 #2_ofertas-de-empleo \u00b6 \u00bfEst\u00e1s interesado en buscar trabajo relacionado con el \u00e1rea de ML/DS? \u00bfBuscas talento en este sector que te pueda ayudar a sacar adelante tu proyecto? \u00a1Utilicemos este canal como un portal de empleo! Creado por DotCSV el 3 de enero de 2019 #2_preguntas-y-dudas \u00b6 La \u00fanica pregunta est\u00fapida es la que no se plantea. Si tienes alguna duda, \u00a1Este es el lugar d\u00f3nde te podemos ayudar! Creado por DotCSV el 1 de enero de 2019 #2_recursos-y-papers \u00b6 Creado por DotCSV el 26 de diciembre de 2018 #2_eventos \u00b6 Compartir eventos relacionados con las \u00e1reas de inter\u00e9s de la comunidad Creado por iris9112 el 26 de marzo de 2019 #2_formacion_universit \u00b6 Aqu\u00ed puedes hablar de tu experiencia en un m\u00e1ster o preguntar sobre alguno que te interese Creado por Alberto el 3 de enero de 2019 #2_principiantes \u00b6 Canal con recursos para las personas que est\u00e1n iniciando en el mundo del machine learning. Tambi\u00e9n se pueden dejar preguntas Creado por Vicente de Jesus Rodriguez Cuellar el 5 de enero de 2019 #3_banco_de_proyectos \u00b6 Grupo de trabajo para el proyecto colaborativo #1. Puedes acceder a m\u00e1s informaci\u00f3n en este documento : https://bit.ly/2D56vw5 Creado por Nicol\u00e1s el 5 de enero de 2019 #3_club-de-lectura \u00b6 Proponer peri\u00f3dicamente un art\u00edculo interesante que leer para su discusi\u00f3n en grupo. Creado por DotCSV el 15 de enero de 2019 #3_competici\u00f3n_kaggle \u00b6 Creado por DotCSV el 26 de diciembre de 2018 #4_electr\u00f3nica-rob\u00f3tic \u00b6 Este canal est\u00e1 dedicado a hablar sobre la electr\u00f3nica y como se combina con el Machine Learning y Data Science Creado por Gabriel el 6 de enero de 2019 #4_ordenadores-hardwar \u00b6 Comentar los equipos que utilizamos para implementar nuestras t\u00e9cnicas de ML en local Creado por Hugo Ach el 3 de enero de 2019 #4_computer_vision \u00b6 Creado por GlockAI el 4 de febrero de 2019 #4_deep-reinf-learn \u00b6 Creado por Santiago el 25 de junio de 2019 #4_modelos-generativos \u00b6 GANs, AutoEncoders, Seq2Seq, todo lo que sea crear! Creado por Pablo Pern\u00edas el 21 de enero de 2019 #4_nlp-mas-ml \u00b6 compartir informaci\u00f3n relacionada a este campo para desarrollar estructuras de control de informaci\u00f3n capaces de desarrollar tareas complejas de compresi\u00f3n de textos o conversaci\u00f3n. Creado por serome111 el 4 de enero de 2019 #5_offtopic \u00b6 Creado por andfk el 21 de marzo de 2019 #5_mental_health \u00b6 Canal sobre resources/tips para mantener buena salud mental, contar experiencias, etc. Creado por Icia C. el 28 de febrero de 2019 #linux \u00b6 Todo lo que este relacionado con este \u00e1mbito. Noticias, ideas, problemas, etc. Creado por Ric el 2 de julio de 2019 #mlh_openbci \u00b6 Desarrollo del electroencefal\u00f3grafo OpenBCI con el m\u00ednimo coste para aplicaciones de machine learning. Creado por elswork el 1 de julio de 2019 #x_desarrollo-interno \u00b6 Dedicado a hablar sobre el desarrollo de herramientas o scripts que ayuden a la comunidad desde la organizaci\u00f3n de Github. Ejemplos: Webs, listado de recursos en el repositorio, etc. Creado por andfk el 3 de enero de 2019","title":"ML-Hispano"},{"location":"#ml-hispano","text":"\u00danete la comunidad Machine Learning Hispano la comunidad m\u00e1s grande en habla hispana. Si tu tambi\u00e9n quieres formar parte de esta comunidad, entra a nuestro Slack a trav\u00e9s del bot\u00f3n rosa o en este link Slack ML-Hispano .","title":"ML-Hispano"},{"location":"#comunidad-ml-hispano","text":"Este repositorio se representa en l\u00ednea en Comunidad ML-Hispano .","title":"Comunidad ML-Hispano"},{"location":"#mlh-web-site","text":"","title":"MLH Web Site"},{"location":"#proyectos","text":"","title":"Proyectos"},{"location":"#por-que-unirte","text":"Forma parte de un gran grupo de personas que quieren aprender a su manera con los recursos de #2_recursos-y-papers desde cero #2_principiantes y preguntar cuanto necesiten #2_preguntas-y-dudas o que buscan hacerlo de manera tradicional #2_formacion_universit Que buscan hacer proyectos para disfrutar y aprender #3_banco_de_proyectos poni\u00e9ndose a prueba #3_competici\u00f3n_kaggle con el mejor entorno posible #4_ordenadores-hardwar y estar listos para el salto laboral #2_ofertas-de-empleo . Sea cual sea tu rama #4_modelos-generativos , #4_computer_vision , #4_electr\u00f3nica-rob\u00f3tic , #4_deep-reinf-learn , #4_nlp-mas-ml seguro encuentras tu lugar en esta gran familia. \u00bfA qu\u00e9 esperas? Empieza present\u00e1ndote en #0_pres\u00e9ntate y elige el mejor canal o canales para continuar. Y si quieres ir un paso m\u00e1s all\u00e1, participa en los canales especiales #x_desarrollo-interno donde podr\u00e1s participar en el dise\u00f1o de la infraestructura de la comunidad o en #5_offtopic el canal m\u00e1s gamberro en el que compartir memes y todo aquello que se te ocurra.","title":"\u00bfPor qu\u00e9 unirte?"},{"location":"#listado-de-canales","text":"Canales a los que puedes unirte:","title":"Listado de canales"},{"location":"#0_anuncios_y_mejoras","text":"\u00bfSe te ocurre una idea para mejorar esta comunidad?\u00bfEchas en falta alg\u00fan canal o crees que hace falta implementar una nueva funcionalidad? \u00a1Utilicemos este canal para discutir sobre ideas que ayuden a mejorar esta comunidad! Creado por DotCSV el 31 de diciembre de 2018","title":"#0_anuncios_y_mejoras"},{"location":"#0_bienvenido_a_mlh","text":"En este canal se har\u00e1n todos los anuncios importantes relacionados con la comunidad, al igual que se listar\u00e1n las reglas aplicadas a este foro. Creado por DotCSV el 22 de diciembre de 2018","title":"#0_bienvenido_a_mlh"},{"location":"#0_presentate","text":"\u00bfQui\u00e9n eres? \u00bfQu\u00e9 \u00e1rea de Machine Learning te interesa m\u00e1s? \u00bfQu\u00e9 puedes aportar a esta comunidad? \u00bfEst\u00e1s en RRSS? La tortilla... \u00bfCon o sin pi\u00f1a? Pres\u00e9ntate y deja un buena impresi\u00f3n Creado por DotCSV el 31 de diciembre de 2018","title":"#0_pres\u00e9ntate"},{"location":"#1_chat-general","text":"Creado por DotCSV el 1 de enero de 2019","title":"#1_chat-general"},{"location":"#1_women-in-ml","text":"Canal dedicado para las mujeres de la comunidad y cient\u00edficas de datos Creado por iris9112 el 4 de enero de 2019","title":"#1_women-in-ml"},{"location":"#2_ofertas-de-empleo","text":"\u00bfEst\u00e1s interesado en buscar trabajo relacionado con el \u00e1rea de ML/DS? \u00bfBuscas talento en este sector que te pueda ayudar a sacar adelante tu proyecto? \u00a1Utilicemos este canal como un portal de empleo! Creado por DotCSV el 3 de enero de 2019","title":"#2_ofertas-de-empleo"},{"location":"#2_preguntas-y-dudas","text":"La \u00fanica pregunta est\u00fapida es la que no se plantea. Si tienes alguna duda, \u00a1Este es el lugar d\u00f3nde te podemos ayudar! Creado por DotCSV el 1 de enero de 2019","title":"#2_preguntas-y-dudas"},{"location":"#2_recursos-y-papers","text":"Creado por DotCSV el 26 de diciembre de 2018","title":"#2_recursos-y-papers"},{"location":"#2_eventos","text":"Compartir eventos relacionados con las \u00e1reas de inter\u00e9s de la comunidad Creado por iris9112 el 26 de marzo de 2019","title":"#2_eventos"},{"location":"#2_formacion_universit","text":"Aqu\u00ed puedes hablar de tu experiencia en un m\u00e1ster o preguntar sobre alguno que te interese Creado por Alberto el 3 de enero de 2019","title":"#2_formacion_universit"},{"location":"#2_principiantes","text":"Canal con recursos para las personas que est\u00e1n iniciando en el mundo del machine learning. Tambi\u00e9n se pueden dejar preguntas Creado por Vicente de Jesus Rodriguez Cuellar el 5 de enero de 2019","title":"#2_principiantes"},{"location":"#3_banco_de_proyectos","text":"Grupo de trabajo para el proyecto colaborativo #1. Puedes acceder a m\u00e1s informaci\u00f3n en este documento : https://bit.ly/2D56vw5 Creado por Nicol\u00e1s el 5 de enero de 2019","title":"#3_banco_de_proyectos"},{"location":"#3_club-de-lectura","text":"Proponer peri\u00f3dicamente un art\u00edculo interesante que leer para su discusi\u00f3n en grupo. Creado por DotCSV el 15 de enero de 2019","title":"#3_club-de-lectura"},{"location":"#3_competicion_kaggle","text":"Creado por DotCSV el 26 de diciembre de 2018","title":"#3_competici\u00f3n_kaggle"},{"location":"#4_electronica-robotic","text":"Este canal est\u00e1 dedicado a hablar sobre la electr\u00f3nica y como se combina con el Machine Learning y Data Science Creado por Gabriel el 6 de enero de 2019","title":"#4_electr\u00f3nica-rob\u00f3tic"},{"location":"#4_ordenadores-hardwar","text":"Comentar los equipos que utilizamos para implementar nuestras t\u00e9cnicas de ML en local Creado por Hugo Ach el 3 de enero de 2019","title":"#4_ordenadores-hardwar"},{"location":"#4_computer_vision","text":"Creado por GlockAI el 4 de febrero de 2019","title":"#4_computer_vision"},{"location":"#4_deep-reinf-learn","text":"Creado por Santiago el 25 de junio de 2019","title":"#4_deep-reinf-learn"},{"location":"#4_modelos-generativos","text":"GANs, AutoEncoders, Seq2Seq, todo lo que sea crear! Creado por Pablo Pern\u00edas el 21 de enero de 2019","title":"#4_modelos-generativos"},{"location":"#4_nlp-mas-ml","text":"compartir informaci\u00f3n relacionada a este campo para desarrollar estructuras de control de informaci\u00f3n capaces de desarrollar tareas complejas de compresi\u00f3n de textos o conversaci\u00f3n. Creado por serome111 el 4 de enero de 2019","title":"#4_nlp-mas-ml"},{"location":"#5_offtopic","text":"Creado por andfk el 21 de marzo de 2019","title":"#5_offtopic"},{"location":"#5_mental_health","text":"Canal sobre resources/tips para mantener buena salud mental, contar experiencias, etc. Creado por Icia C. el 28 de febrero de 2019","title":"#5_mental_health"},{"location":"#linux","text":"Todo lo que este relacionado con este \u00e1mbito. Noticias, ideas, problemas, etc. Creado por Ric el 2 de julio de 2019","title":"#linux"},{"location":"#mlh_openbci","text":"Desarrollo del electroencefal\u00f3grafo OpenBCI con el m\u00ednimo coste para aplicaciones de machine learning. Creado por elswork el 1 de julio de 2019","title":"#mlh_openbci"},{"location":"#x_desarrollo-interno","text":"Dedicado a hablar sobre el desarrollo de herramientas o scripts que ayuden a la comunidad desde la organizaci\u00f3n de Github. Ejemplos: Webs, listado de recursos en el repositorio, etc. Creado por andfk el 3 de enero de 2019","title":"#x_desarrollo-interno"},{"location":"CODE_OF_CONDUCT/","text":"C\u00f3digo de conducta \u00b6 Comunidad Machine Learning Hispano \u00b6 1. Prop\u00f3sito \u00b6 Uno de los objetivos principales de la comunidad machine learning hispano es ser inclusiva para el mayor n\u00famero de contribuyentes, con la mayor diversidad de or\u00edgenes posibles. Como tal, estamos comprometidos a proporcionar un ambiente agradable, seguro y acogedor para todos, independientemente de su sexo, orientaci\u00f3n sexual, capacidad, etnia, nivel socioecon\u00f3mico, y religi\u00f3n (o falta de la misma). Este c\u00f3digo de conducta resume nuestras expectativas para todos los que participan en nuestra comunidad, as\u00ed como las consecuencias para el comportamiento inaceptable. Invitamos a todos y todas las que participantes en machine learning hispano a que nos ayuden a crear experiencias seguras y positivas para todos. 2. Comportamiento esperado \u00b6 Participa de manera aut\u00e9ntica y activa. Al hacerlo, contribuyes a la salud y la longevidad de esta comunidad. Ejercita la consideraci\u00f3n y el respeto en tus comunicaciones y acciones. Intenta colaborar en lugar de generar conflicto. Abst\u00e9nte de adoptar una conducta y un lenguaje degradantes, discriminatorios, abusivos o acosadores. S\u00e9 consciente de tu entorno y de tus compa\u00f1eros participantes. Alerta a l\u00edderes de la comunidad si notas una situaci\u00f3n peligrosa, alguien en apuros, o violaciones de este C\u00f3digo de Conducta, incluso si parecen intrascendentes. 3. Comportamiento inaceptable \u00b6 Comportamientos inaceptables incluyen: intimidaci\u00f3n, acoso, abuso, discriminaci\u00f3n, comunicaci\u00f3n despectiva o degradante o acciones por cualquier participante en nuestra comunidad, en todos los eventos relacionados y en las comunicaciones que se realizan en el contexto de los negocios de la comunidad. El acoso incluye: comentarios nocivos o perjudiciales, verbales o escritos relacionados con el g\u00e9nero, la orientaci\u00f3n sexual, raza, religi\u00f3n, discapacidad; uso inadecuado de desnudos y / o im\u00e1genes sexuales en espacios p\u00fablicos (incluyendo la presentaci\u00f3n diapositivas); intimidaci\u00f3n deliberada, acecho o seguimiento; fotograf\u00edas o grabaciones acosadoras; interrupci\u00f3n sostenida de charlas y otros eventos; contacto f\u00edsico inapropiado, y atenci\u00f3n sexual no deseada. 4. Consecuencias de comportamiento inaceptable \u00b6 El comportamiento inaceptable de cualquier miembro de la comunidad, incluyendo patrocinadores y aquellos con poder de decisi\u00f3n, no ser\u00e1 tolerado. Se espera que personas a quienes se les solicite que detengan su comportamiento inaceptable lo hagan de manera inmediata. Si un miembro de la comunidad participa en una conducta inaceptable, los organizadores comunitarios pueden tomar cualquier acci\u00f3n que consideren apropiada, hasta e incluyendo una prohibici\u00f3n temporal o expulsi\u00f3n permanente de la comunidad, sin previo aviso. 5 Pol\u00edticas de moderaci\u00f3n \u00b6 Estas son las pol\u00edticas para mantener los est\u00e1ndares de conducta en nuestra comunidad en los canales de chat, meetups asociados, conferencias, grupos de estudio, y eventos virtuales. Palabras que violen las normas de C\u00f3digo de Conducta, incluyendo comentarios odiosos, hirientes, opresivos, o excluyentes, no est\u00e1n permitidos. (Se permite las \"malas palabras\", pero nunca enfocadas hacia otro usuario/asistente, y nunca de una manera odiosa.) Comentarios que los organizadores encuentran inapropiados tampoco est\u00e1n permitidos, as\u00ed aparezcan en el c\u00f3digo de conducta o no. Los organizadores primero deber\u00e1n responder a dichos comentarios con una advertencia. Si la advertencia es ignorada, el usuario/asistente ser\u00e1 expulsado del canal para que eval\u00fae su comportamiento, o deber\u00e1 retirarse del lugar por 30 minutos en caso de eventos presenciales. Si el usuario/asistente regresa y contin\u00faa causando problemas, ser\u00e1 expulsado del grupo/evento/lugar/Slack de forma indefinida. Los organizadores pueden retractar la expulsi\u00f3n a su discreci\u00f3n si esta se trata de una primera infracci\u00f3n y se ha ofrecido una disculpa sincera a quien ofendieron. Si un organizador expulsa a alguien y usted cree que fue una expulsi\u00f3n sin causa, contacte a ese organizador, o a un organizador diferente en privado. Quejas sobre expulsiones en medios abiertos, sociales, u otros canales no son permitidas y conllevaran a m\u00e1s expulsiones. Los organizadores se rigen por un nivel m\u00e1s alto que otros miembros de la comunidad. Si un organizador crea una situaci\u00f3n inadecuada, este ser\u00e1 juzgado con un est\u00e1ndar m\u00e1s alto. En la comunidad machine learning hispano nos esforzamos por ir un paso m\u00e1s all\u00e1 y cuidar el uno de los otros y otras. No se limite a tratar de mostrar su excelencia t\u00e9cnica, trate tambi\u00e9n de ser la mejor persona posible. En particular, evite tocar temas ofensivos o sensibles, especialmente si est\u00e1n fuera del tema tratado; esto muy a menudo conduce a peleas innecesarias, sentimientos heridos, y a da\u00f1os en la confianza; peor a\u00fan, puede conducir a que personas se alejen de la comunidad en su totalidad. De la misma forma, si alguien est\u00e1 en desacuerdo con algo que usted dijo o hizo, resista el impulso de estar a la defensiva. Simplemente pare de hacer o decir lo que fuera que caus\u00f3 la queja y pida disculpas. Hay buenas probabilidades de que usted se pudo haber comunicado mejor, incluso si usted siente que fue malinterpretado o injustamente acusado, - recuerde que es su responsabilidad hacer que sus compa\u00f1eras y compa\u00f1eros de la comunidad machine learning hispano est\u00e9n c\u00f3modos y c\u00f3modas. Todo el mundo busca harmon\u00eda y todos estamos aqu\u00ed, ante todo, porque queremos hablar de tecnolog\u00edas que nos gustan. Por lo general, la gente est\u00e1 dispuesta a asumir buenas intenciones y perdonar, siempre y cuando usted gane su confianza y act\u00fae de forma honrada. 6. Alcance \u00b6 Esperamos que todos los participantes de la comunidad (contribuyentes y otros invitados) se atengan a este C\u00f3digo de Conducta en todos los espacios virtuales y presenciales. 7. Licencia y atribuci\u00f3n \u00b6 Este C\u00f3digo de Conducta se distribuye bajo una licencia Creative Commons \u2013 ShareAlike (BY-SA) Adaptado del C\u00f3digo de Conducta de colombia.dev","title":"C\u00f3digo de conducta"},{"location":"CODE_OF_CONDUCT/#codigo-de-conducta","text":"","title":"C\u00f3digo de conducta"},{"location":"CODE_OF_CONDUCT/#comunidad-machine-learning-hispano","text":"","title":"Comunidad Machine Learning Hispano"},{"location":"CODE_OF_CONDUCT/#1-proposito","text":"Uno de los objetivos principales de la comunidad machine learning hispano es ser inclusiva para el mayor n\u00famero de contribuyentes, con la mayor diversidad de or\u00edgenes posibles. Como tal, estamos comprometidos a proporcionar un ambiente agradable, seguro y acogedor para todos, independientemente de su sexo, orientaci\u00f3n sexual, capacidad, etnia, nivel socioecon\u00f3mico, y religi\u00f3n (o falta de la misma). Este c\u00f3digo de conducta resume nuestras expectativas para todos los que participan en nuestra comunidad, as\u00ed como las consecuencias para el comportamiento inaceptable. Invitamos a todos y todas las que participantes en machine learning hispano a que nos ayuden a crear experiencias seguras y positivas para todos.","title":"1. Prop\u00f3sito"},{"location":"CODE_OF_CONDUCT/#2-comportamiento-esperado","text":"Participa de manera aut\u00e9ntica y activa. Al hacerlo, contribuyes a la salud y la longevidad de esta comunidad. Ejercita la consideraci\u00f3n y el respeto en tus comunicaciones y acciones. Intenta colaborar en lugar de generar conflicto. Abst\u00e9nte de adoptar una conducta y un lenguaje degradantes, discriminatorios, abusivos o acosadores. S\u00e9 consciente de tu entorno y de tus compa\u00f1eros participantes. Alerta a l\u00edderes de la comunidad si notas una situaci\u00f3n peligrosa, alguien en apuros, o violaciones de este C\u00f3digo de Conducta, incluso si parecen intrascendentes.","title":"2. Comportamiento esperado"},{"location":"CODE_OF_CONDUCT/#3-comportamiento-inaceptable","text":"Comportamientos inaceptables incluyen: intimidaci\u00f3n, acoso, abuso, discriminaci\u00f3n, comunicaci\u00f3n despectiva o degradante o acciones por cualquier participante en nuestra comunidad, en todos los eventos relacionados y en las comunicaciones que se realizan en el contexto de los negocios de la comunidad. El acoso incluye: comentarios nocivos o perjudiciales, verbales o escritos relacionados con el g\u00e9nero, la orientaci\u00f3n sexual, raza, religi\u00f3n, discapacidad; uso inadecuado de desnudos y / o im\u00e1genes sexuales en espacios p\u00fablicos (incluyendo la presentaci\u00f3n diapositivas); intimidaci\u00f3n deliberada, acecho o seguimiento; fotograf\u00edas o grabaciones acosadoras; interrupci\u00f3n sostenida de charlas y otros eventos; contacto f\u00edsico inapropiado, y atenci\u00f3n sexual no deseada.","title":"3. Comportamiento inaceptable"},{"location":"CODE_OF_CONDUCT/#4-consecuencias-de-comportamiento-inaceptable","text":"El comportamiento inaceptable de cualquier miembro de la comunidad, incluyendo patrocinadores y aquellos con poder de decisi\u00f3n, no ser\u00e1 tolerado. Se espera que personas a quienes se les solicite que detengan su comportamiento inaceptable lo hagan de manera inmediata. Si un miembro de la comunidad participa en una conducta inaceptable, los organizadores comunitarios pueden tomar cualquier acci\u00f3n que consideren apropiada, hasta e incluyendo una prohibici\u00f3n temporal o expulsi\u00f3n permanente de la comunidad, sin previo aviso.","title":"4. Consecuencias de comportamiento inaceptable"},{"location":"CODE_OF_CONDUCT/#5-politicas-de-moderacion","text":"Estas son las pol\u00edticas para mantener los est\u00e1ndares de conducta en nuestra comunidad en los canales de chat, meetups asociados, conferencias, grupos de estudio, y eventos virtuales. Palabras que violen las normas de C\u00f3digo de Conducta, incluyendo comentarios odiosos, hirientes, opresivos, o excluyentes, no est\u00e1n permitidos. (Se permite las \"malas palabras\", pero nunca enfocadas hacia otro usuario/asistente, y nunca de una manera odiosa.) Comentarios que los organizadores encuentran inapropiados tampoco est\u00e1n permitidos, as\u00ed aparezcan en el c\u00f3digo de conducta o no. Los organizadores primero deber\u00e1n responder a dichos comentarios con una advertencia. Si la advertencia es ignorada, el usuario/asistente ser\u00e1 expulsado del canal para que eval\u00fae su comportamiento, o deber\u00e1 retirarse del lugar por 30 minutos en caso de eventos presenciales. Si el usuario/asistente regresa y contin\u00faa causando problemas, ser\u00e1 expulsado del grupo/evento/lugar/Slack de forma indefinida. Los organizadores pueden retractar la expulsi\u00f3n a su discreci\u00f3n si esta se trata de una primera infracci\u00f3n y se ha ofrecido una disculpa sincera a quien ofendieron. Si un organizador expulsa a alguien y usted cree que fue una expulsi\u00f3n sin causa, contacte a ese organizador, o a un organizador diferente en privado. Quejas sobre expulsiones en medios abiertos, sociales, u otros canales no son permitidas y conllevaran a m\u00e1s expulsiones. Los organizadores se rigen por un nivel m\u00e1s alto que otros miembros de la comunidad. Si un organizador crea una situaci\u00f3n inadecuada, este ser\u00e1 juzgado con un est\u00e1ndar m\u00e1s alto. En la comunidad machine learning hispano nos esforzamos por ir un paso m\u00e1s all\u00e1 y cuidar el uno de los otros y otras. No se limite a tratar de mostrar su excelencia t\u00e9cnica, trate tambi\u00e9n de ser la mejor persona posible. En particular, evite tocar temas ofensivos o sensibles, especialmente si est\u00e1n fuera del tema tratado; esto muy a menudo conduce a peleas innecesarias, sentimientos heridos, y a da\u00f1os en la confianza; peor a\u00fan, puede conducir a que personas se alejen de la comunidad en su totalidad. De la misma forma, si alguien est\u00e1 en desacuerdo con algo que usted dijo o hizo, resista el impulso de estar a la defensiva. Simplemente pare de hacer o decir lo que fuera que caus\u00f3 la queja y pida disculpas. Hay buenas probabilidades de que usted se pudo haber comunicado mejor, incluso si usted siente que fue malinterpretado o injustamente acusado, - recuerde que es su responsabilidad hacer que sus compa\u00f1eras y compa\u00f1eros de la comunidad machine learning hispano est\u00e9n c\u00f3modos y c\u00f3modas. Todo el mundo busca harmon\u00eda y todos estamos aqu\u00ed, ante todo, porque queremos hablar de tecnolog\u00edas que nos gustan. Por lo general, la gente est\u00e1 dispuesta a asumir buenas intenciones y perdonar, siempre y cuando usted gane su confianza y act\u00fae de forma honrada.","title":"5  Pol\u00edticas de moderaci\u00f3n"},{"location":"CODE_OF_CONDUCT/#6-alcance","text":"Esperamos que todos los participantes de la comunidad (contribuyentes y otros invitados) se atengan a este C\u00f3digo de Conducta en todos los espacios virtuales y presenciales.","title":"6. Alcance"},{"location":"CODE_OF_CONDUCT/#7-licencia-y-atribucion","text":"Este C\u00f3digo de Conducta se distribuye bajo una licencia Creative Commons \u2013 ShareAlike (BY-SA) Adaptado del C\u00f3digo de Conducta de colombia.dev","title":"7. Licencia y atribuci\u00f3n"},{"location":"Portal/","text":"Portal \u00b6 El portal de proyectos se representa en l\u00ednea en ML-Hispano @ Github , contiene una lista de repositorios que son de c\u00f3digo abierto y mantenidos por equipos de ML-Hispano. A\u00f1adiendo un nuevo repositorio a la lista \u00b6 Para a\u00f1adir proyectos al portal http://machinelearning-hispano.com , es necesario modificar orgs.js . Para agregar un solo repositorio, agregue una nueva entrada a orgs.js , especifique el nombre de la organizaci\u00f3n Github y el nombre del repositorio (sep\u00e1relos con / ), y configure el type en repo , un ejemplo se puede ver a continuaci\u00f3n: { \"name\": \"RuntimeTools/appmetrics\", \"type\": \"repo\" } Para agregar todos los repositorios en una organizaci\u00f3n Github, agregue una nueva entrada a orgs.js , especifique el nombre de la organizaci\u00f3n Github, y configure el 'type' a org , se puede ver un ejemplo abajo: { \"name\": \"IBMResilient\", \"type\": \"org\" } Para probar cambios localmente \u00b6 Desde dentro de la carpeta de nivel superior del repositorio clonado ejecute: $ python -m http.server {port} Por ejemplo: python -m http.server 8000 -> Abra la siguiente URL en un navegador: o bien: python -m SimpleHTTPServer 8000 http://localhost:8000/ Tutorial r\u00e1pido de Git \u00b6 Clona el repositorio y crea una nueva rama. $ git clone https://github.com/ml-hispano/ml-hispano.github.io $ git checkout -b branch_name Actualiza los archivos que te gustar\u00eda cambiar. Suba los cambios al repositorio. $ git add file1 file2 $ git commit -m \"add your commit message here\" $ git push origin branch_name Vea su rama en Github y cree una Solicitud de Cambio.","title":"Portal"},{"location":"Portal/#portal","text":"El portal de proyectos se representa en l\u00ednea en ML-Hispano @ Github , contiene una lista de repositorios que son de c\u00f3digo abierto y mantenidos por equipos de ML-Hispano.","title":"Portal"},{"location":"Portal/#anadiendo-un-nuevo-repositorio-a-la-lista","text":"Para a\u00f1adir proyectos al portal http://machinelearning-hispano.com , es necesario modificar orgs.js . Para agregar un solo repositorio, agregue una nueva entrada a orgs.js , especifique el nombre de la organizaci\u00f3n Github y el nombre del repositorio (sep\u00e1relos con / ), y configure el type en repo , un ejemplo se puede ver a continuaci\u00f3n: { \"name\": \"RuntimeTools/appmetrics\", \"type\": \"repo\" } Para agregar todos los repositorios en una organizaci\u00f3n Github, agregue una nueva entrada a orgs.js , especifique el nombre de la organizaci\u00f3n Github, y configure el 'type' a org , se puede ver un ejemplo abajo: { \"name\": \"IBMResilient\", \"type\": \"org\" }","title":"A\u00f1adiendo un nuevo repositorio a la lista"},{"location":"Portal/#para-probar-cambios-localmente","text":"Desde dentro de la carpeta de nivel superior del repositorio clonado ejecute: $ python -m http.server {port} Por ejemplo: python -m http.server 8000 -> Abra la siguiente URL en un navegador: o bien: python -m SimpleHTTPServer 8000 http://localhost:8000/","title":"Para probar cambios localmente"},{"location":"Portal/#tutorial-rapido-de-git","text":"Clona el repositorio y crea una nueva rama. $ git clone https://github.com/ml-hispano/ml-hispano.github.io $ git checkout -b branch_name Actualiza los archivos que te gustar\u00eda cambiar. Suba los cambios al repositorio. $ git add file1 file2 $ git commit -m \"add your commit message here\" $ git push origin branch_name Vea su rama en Github y cree una Solicitud de Cambio.","title":"Tutorial r\u00e1pido de Git"},{"location":"Canales/1_women-in-ml/","text":"1_women-in-ml \u00b6 TO-DO","title":"1_women-in-ml"},{"location":"Canales/1_women-in-ml/#1_women-in-ml","text":"TO-DO","title":"1_women-in-ml"},{"location":"Colabora/","text":"Colabora \u00b6 Cualquiera con cuenta en GitHub puede modificar la documentaci\u00f3n, pinchando en el l\u00e1piz y modificando directamente en GitHub los ficheros .md que se alojan bajo la carpeta /mkdocs, una vez aprobado el cambio se proceder\u00e1 a generar el site. Instrucciones para generar el site ( Solo Administradores ) \u00b6 Con el objetivo de agilizar el desarrollo y facilitar la colaboraci\u00f3n utilizaremos la siguiente herramienta MkDocs-DIY , un proyecto derivado de Mkdocs , cuyo objetivo es generar y publicar de forma r\u00e1pida y sencilla los cambios en el proyecto. Esta decisi\u00f3n no es inamovible, es un punto de partida inicial que puede ser sustituido a decisi\u00f3n de los integrantes. El proceso a seguir es el siguiente: Clonar el repositorio \u00b6 git clone https://github.com/ml-hispano/ml-hispano.github.io.git cd ml-hispano.github.io Herramientas \u00b6 Es necesario tener instalado Python 3.x junto con el resto de paquetes: pip install mkdocs == 1 .0.4 pygments pymdown-extensions mkdocs-material O puedes simplificar utilizando este contenedor Docker . Servir el site (opcional) \u00b6 Esto sirve para ver una vista previa de como quedar\u00edan los cambios introducidos v\u00eda GitHub o para hacer modificaciones y ver el resultado en tiempo real. docker run -it --rm -v ` pwd ` :/mkdocs -p 7777 :7777 elswork/mkdocs-diy mkdocs serve -a 0 .0.0.0:7777 Generar el site \u00b6 En este paso se generan los archivos web (html, css, ...) en la carpeta /docs que forman la p\u00e1gina de visualizaci\u00f3n gh-page . docker run -it --rm -v ` pwd ` :/mkdocs -p 7777 :7777 elswork/mkdocs-diy mkdocs build Publicar en Github \u00b6 Los miembros con permiso podr\u00e1n subir el sitio directamente a GitHub, el resto puede hacer un pull request que se someter\u00e1 a la revisi\u00f3n y aprobaci\u00f3n de los administradores.","title":"Colabora"},{"location":"Colabora/#colabora","text":"Cualquiera con cuenta en GitHub puede modificar la documentaci\u00f3n, pinchando en el l\u00e1piz y modificando directamente en GitHub los ficheros .md que se alojan bajo la carpeta /mkdocs, una vez aprobado el cambio se proceder\u00e1 a generar el site.","title":"Colabora"},{"location":"Colabora/#instrucciones-para-generar-el-site-solo-administradores","text":"Con el objetivo de agilizar el desarrollo y facilitar la colaboraci\u00f3n utilizaremos la siguiente herramienta MkDocs-DIY , un proyecto derivado de Mkdocs , cuyo objetivo es generar y publicar de forma r\u00e1pida y sencilla los cambios en el proyecto. Esta decisi\u00f3n no es inamovible, es un punto de partida inicial que puede ser sustituido a decisi\u00f3n de los integrantes. El proceso a seguir es el siguiente:","title":"Instrucciones para generar el site (Solo Administradores)"},{"location":"Colabora/#clonar-el-repositorio","text":"git clone https://github.com/ml-hispano/ml-hispano.github.io.git cd ml-hispano.github.io","title":"Clonar el repositorio"},{"location":"Colabora/#herramientas","text":"Es necesario tener instalado Python 3.x junto con el resto de paquetes: pip install mkdocs == 1 .0.4 pygments pymdown-extensions mkdocs-material O puedes simplificar utilizando este contenedor Docker .","title":"Herramientas"},{"location":"Colabora/#servir-el-site-opcional","text":"Esto sirve para ver una vista previa de como quedar\u00edan los cambios introducidos v\u00eda GitHub o para hacer modificaciones y ver el resultado en tiempo real. docker run -it --rm -v ` pwd ` :/mkdocs -p 7777 :7777 elswork/mkdocs-diy mkdocs serve -a 0 .0.0.0:7777","title":"Servir el site (opcional)"},{"location":"Colabora/#generar-el-site","text":"En este paso se generan los archivos web (html, css, ...) en la carpeta /docs que forman la p\u00e1gina de visualizaci\u00f3n gh-page . docker run -it --rm -v ` pwd ` :/mkdocs -p 7777 :7777 elswork/mkdocs-diy mkdocs build","title":"Generar el site"},{"location":"Colabora/#publicar-en-github","text":"Los miembros con permiso podr\u00e1n subir el sitio directamente a GitHub, el resto puede hacer un pull request que se someter\u00e1 a la revisi\u00f3n y aprobaci\u00f3n de los administradores.","title":"Publicar en Github"},{"location":"Colabora/specimen/","text":"Specimen \u00b6 Special \u00b6 !!! note \"Note Sample\" This is a note. Result: Note Sample This is a note. Some Heading Use !!! abstract \"Some Heading\" Some Heading Use !!! info \"Some Heading\" Some Heading Use !!! tip \"Some Heading\" Some Heading Use !!! question \"Some Heading\" Some Heading Use !!! warning \"Some Heading\" Some Heading Use !!! success \"Some Heading\" Some Heading Use !!! failure \"Some Heading\" Some Heading Use !!! danger \"Some Heading\" Some Heading Use !!! bug \"Some Heading\" Some Heading Use !!! example \"Some Heading\" Some Heading Use !!! quote \"Some Heading\" Body copy \u00b6 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras arcu libero, mollis sed massa vel, ornare viverra ex . Mauris a ullamcorper lacus. Nullam urna elit, malesuada eget finibus ut, ullamcorper ac tortor. Vestibulum sodales pulvinar nisl, pharetra aliquet est. Quisque volutpat erat ac nisi accumsan tempor. Sed suscipit , orci non pretium pretium, quam mi gravida metus, vel venenatis justo est condimentum diam. Maecenas non ornare justo. Nam a ipsum eros. Nulla aliquam orci sit amet nisl posuere malesuada. Proin aliquet nulla velit, quis ultricies orci feugiat et. Ut tincidunt sollicitudin tincidunt. Aenean ullamcorper sit amet nulla at interdum. Headings \u00b6 The 3 rd level \u00b6 The 4 th level \u00b6 The 5 th level \u00b6 The 6 th level \u00b6 Headings with secondary text \u00b6 The 3 rd level with secondary text \u00b6 The 4 th level with secondary text \u00b6 The 5 th level with secondary text \u00b6 The 6 th level with secondary text \u00b6 Blockquotes \u00b6 Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Sed molestie imperdiet consectetur. Blockquote nesting \u00b6 Sed aliquet , neque at rutrum mollis, neque nisi tincidunt nibh, vitae faucibus lacus nunc at lacus. Nunc scelerisque, quam id cursus sodales, lorem libero fermentum urna, ut efficitur elit ligula et nunc. Mauris dictum mi lacus, sit amet pellentesque urna vehicula fringilla. Ut sit amet placerat ante. Proin sed elementum nulla. Nunc vitae sem odio. Suspendisse ac eros arcu. Vivamus orci erat, volutpat a tempor et, rutrum. eu odio. Suspendisse rutrum facilisis risus , eu posuere neque commodo a. Interdum et malesuada fames ac ante ipsum primis in faucibus. Sed nec leo bibendum, sodales mauris ut, tincidunt massa. Other content blocks \u00b6 Vestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu lectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl, sit amet laoreet nibh. var _extends = function ( target ) { for ( var i = 1 ; i < arguments . length ; i ++ ) { var source = arguments [ i ]; for ( var key in source ) { target [ key ] = source [ key ]; } } return target ; }; Praesent at return target , sodales nibh vel, tempor felis. Fusce vel lacinia lacus. Suspendisse rhoncus nunc non nisi iaculis ultrices. Donec consectetur mauris non neque imperdiet, eget volutpat libero. Lists \u00b6 Unordered lists \u00b6 Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci, at elementum urna sodales vitae. In in vehicula nulla, quis ornare libero. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante, fringilla at aliquam ac, aliquet sed mauris. Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam. Ordered lists \u00b6 Integer vehicula feugiat magna, a mollis tellus. Nam mollis ex ante, quis elementum eros tempor rutrum. Aenean efficitur lobortis lacinia. Nulla consectetur feugiat sodales. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aliquam ornare feugiat quam et egestas. Nunc id erat et quam pellentesque lacinia eu vel odio. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Mauris dictum mi lacus Ut sit amet placerat ante Suspendisse ac eros arcu Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Sed aliquet, neque at rutrum mollis, neque nisi tincidunt nibh. Pellentesque eget var _extends ornare tellus, ut gravida mi. var _extends = function ( target ) { for ( var i = 1 ; i < arguments . length ; i ++ ) { var source = arguments [ i ]; for ( var key in source ) { target [ key ] = source [ key ]; } } return target ; }; Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo. Definition lists \u00b6 Lorem ipsum dolor sit amet : Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci, at elementum urna sodales vitae. In in vehicula nulla. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Cras arcu libero : Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante, fringilla at aliquam ac, aliquet sed mauris. Code blocks \u00b6 Inline \u00b6 Morbi eget dapibus felis . Vivamus venenatis porttitor tortor sit amet rutrum. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Pellentesque aliquet quam enim , eu volutpat urna rutrum a. Nam vehicula nunc return target mauris, a ultricies libero efficitur sed. Sed molestie imperdiet consectetur. Vivamus a pharetra leo. Pellentesque eget ornare tellus, ut gravida mi. Fusce vel lacinia lacus. Listing \u00b6 1 2 3 4 5 6 7 8 9 var _extends = function ( target ) { for ( var i = 1 ; i < arguments . length ; i ++ ) { var source = arguments [ i ]; for ( var key in source ) { target [ key ] = source [ key ]; } } return target ; }; Horizontal rules \u00b6 Aenean in finibus diam. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Integer vehicula feugiat magna, a mollis tellus. Nam mollis ex ante, quis elementum eros tempor rutrum. Aenean efficitur lobortis lacinia. Nulla consectetur feugiat sodales. Data tables \u00b6 Sollicitudo / Pellentesi consectetur adipiscing elit arcu sed Vivamus a pharetra yes yes yes yes yes Ornare viverra ex yes yes yes yes yes Mauris a ullamcorper yes yes partial yes yes Nullam urna elit yes yes yes yes yes Malesuada eget finibus yes yes yes yes yes Ullamcorper yes yes yes yes yes Vestibulum sodales yes - yes - yes Pulvinar nisl yes yes yes - - Pharetra aliquet est yes yes yes yes yes Sed suscipit yes yes yes yes yes Orci non pretium yes partial - - - Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci, at elementum urna sodales vitae. In in vehicula nulla, quis ornare libero. Left Center Right Lorem dolor amet ipsum sit Vestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu lectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl, sit amet laoreet nibh. Table with colgroups (Pandoc) Lorem ipsum dolor sit amet. Sed sagittis eleifend rutrum. Donec vitae suscipit est.","title":"Specimen"},{"location":"Colabora/specimen/#specimen","text":"","title":"Specimen"},{"location":"Colabora/specimen/#special","text":"!!! note \"Note Sample\" This is a note. Result: Note Sample This is a note. Some Heading Use !!! abstract \"Some Heading\" Some Heading Use !!! info \"Some Heading\" Some Heading Use !!! tip \"Some Heading\" Some Heading Use !!! question \"Some Heading\" Some Heading Use !!! warning \"Some Heading\" Some Heading Use !!! success \"Some Heading\" Some Heading Use !!! failure \"Some Heading\" Some Heading Use !!! danger \"Some Heading\" Some Heading Use !!! bug \"Some Heading\" Some Heading Use !!! example \"Some Heading\" Some Heading Use !!! quote \"Some Heading\"","title":"Special"},{"location":"Colabora/specimen/#body-copy","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras arcu libero, mollis sed massa vel, ornare viverra ex . Mauris a ullamcorper lacus. Nullam urna elit, malesuada eget finibus ut, ullamcorper ac tortor. Vestibulum sodales pulvinar nisl, pharetra aliquet est. Quisque volutpat erat ac nisi accumsan tempor. Sed suscipit , orci non pretium pretium, quam mi gravida metus, vel venenatis justo est condimentum diam. Maecenas non ornare justo. Nam a ipsum eros. Nulla aliquam orci sit amet nisl posuere malesuada. Proin aliquet nulla velit, quis ultricies orci feugiat et. Ut tincidunt sollicitudin tincidunt. Aenean ullamcorper sit amet nulla at interdum.","title":"Body copy"},{"location":"Colabora/specimen/#headings","text":"","title":"Headings"},{"location":"Colabora/specimen/#the-3rd-level","text":"","title":"The 3rd level"},{"location":"Colabora/specimen/#the-4th-level","text":"","title":"The 4th level"},{"location":"Colabora/specimen/#the-5th-level","text":"","title":"The 5th level"},{"location":"Colabora/specimen/#the-6th-level","text":"","title":"The 6th level"},{"location":"Colabora/specimen/#headings-with-secondary-text","text":"","title":"Headings with secondary text"},{"location":"Colabora/specimen/#the-3rd-level-with-secondary-text","text":"","title":"The 3rd level with secondary text"},{"location":"Colabora/specimen/#the-4th-level-with-secondary-text","text":"","title":"The 4th level with secondary text"},{"location":"Colabora/specimen/#the-5th-level-with-secondary-text","text":"","title":"The 5th level with secondary text"},{"location":"Colabora/specimen/#the-6th-level-with-secondary-text","text":"","title":"The 6th level with secondary text"},{"location":"Colabora/specimen/#blockquotes","text":"Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Sed molestie imperdiet consectetur.","title":"Blockquotes"},{"location":"Colabora/specimen/#blockquote-nesting","text":"Sed aliquet , neque at rutrum mollis, neque nisi tincidunt nibh, vitae faucibus lacus nunc at lacus. Nunc scelerisque, quam id cursus sodales, lorem libero fermentum urna, ut efficitur elit ligula et nunc. Mauris dictum mi lacus, sit amet pellentesque urna vehicula fringilla. Ut sit amet placerat ante. Proin sed elementum nulla. Nunc vitae sem odio. Suspendisse ac eros arcu. Vivamus orci erat, volutpat a tempor et, rutrum. eu odio. Suspendisse rutrum facilisis risus , eu posuere neque commodo a. Interdum et malesuada fames ac ante ipsum primis in faucibus. Sed nec leo bibendum, sodales mauris ut, tincidunt massa.","title":"Blockquote nesting"},{"location":"Colabora/specimen/#other-content-blocks","text":"Vestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu lectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl, sit amet laoreet nibh. var _extends = function ( target ) { for ( var i = 1 ; i < arguments . length ; i ++ ) { var source = arguments [ i ]; for ( var key in source ) { target [ key ] = source [ key ]; } } return target ; }; Praesent at return target , sodales nibh vel, tempor felis. Fusce vel lacinia lacus. Suspendisse rhoncus nunc non nisi iaculis ultrices. Donec consectetur mauris non neque imperdiet, eget volutpat libero.","title":"Other content blocks"},{"location":"Colabora/specimen/#lists","text":"","title":"Lists"},{"location":"Colabora/specimen/#unordered-lists","text":"Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci, at elementum urna sodales vitae. In in vehicula nulla, quis ornare libero. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante, fringilla at aliquam ac, aliquet sed mauris. Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh lacinia sed. Aenean in finibus diam.","title":"Unordered lists"},{"location":"Colabora/specimen/#ordered-lists","text":"Integer vehicula feugiat magna, a mollis tellus. Nam mollis ex ante, quis elementum eros tempor rutrum. Aenean efficitur lobortis lacinia. Nulla consectetur feugiat sodales. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aliquam ornare feugiat quam et egestas. Nunc id erat et quam pellentesque lacinia eu vel odio. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a ultricies libero efficitur sed. Mauris dictum mi lacus Ut sit amet placerat ante Suspendisse ac eros arcu Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a. Sed aliquet, neque at rutrum mollis, neque nisi tincidunt nibh. Pellentesque eget var _extends ornare tellus, ut gravida mi. var _extends = function ( target ) { for ( var i = 1 ; i < arguments . length ; i ++ ) { var source = arguments [ i ]; for ( var key in source ) { target [ key ] = source [ key ]; } } return target ; }; Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis nulla. Vivamus a pharetra leo.","title":"Ordered lists"},{"location":"Colabora/specimen/#definition-lists","text":"Lorem ipsum dolor sit amet : Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci, at elementum urna sodales vitae. In in vehicula nulla. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Cras arcu libero : Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin ut eros sed sapien ullamcorper consequat. Nunc ligula ante, fringilla at aliquam ac, aliquet sed mauris.","title":"Definition lists"},{"location":"Colabora/specimen/#code-blocks","text":"","title":"Code blocks"},{"location":"Colabora/specimen/#inline","text":"Morbi eget dapibus felis . Vivamus venenatis porttitor tortor sit amet rutrum. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Pellentesque aliquet quam enim , eu volutpat urna rutrum a. Nam vehicula nunc return target mauris, a ultricies libero efficitur sed. Sed molestie imperdiet consectetur. Vivamus a pharetra leo. Pellentesque eget ornare tellus, ut gravida mi. Fusce vel lacinia lacus.","title":"Inline"},{"location":"Colabora/specimen/#listing","text":"1 2 3 4 5 6 7 8 9 var _extends = function ( target ) { for ( var i = 1 ; i < arguments . length ; i ++ ) { var source = arguments [ i ]; for ( var key in source ) { target [ key ] = source [ key ]; } } return target ; };","title":"Listing"},{"location":"Colabora/specimen/#horizontal-rules","text":"Aenean in finibus diam. Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis. Nam vulputate tincidunt fringilla. Nullam dignissim ultrices urna non auctor. Integer vehicula feugiat magna, a mollis tellus. Nam mollis ex ante, quis elementum eros tempor rutrum. Aenean efficitur lobortis lacinia. Nulla consectetur feugiat sodales.","title":"Horizontal rules"},{"location":"Colabora/specimen/#data-tables","text":"Sollicitudo / Pellentesi consectetur adipiscing elit arcu sed Vivamus a pharetra yes yes yes yes yes Ornare viverra ex yes yes yes yes yes Mauris a ullamcorper yes yes partial yes yes Nullam urna elit yes yes yes yes yes Malesuada eget finibus yes yes yes yes yes Ullamcorper yes yes yes yes yes Vestibulum sodales yes - yes - yes Pulvinar nisl yes yes yes - - Pharetra aliquet est yes yes yes yes yes Sed suscipit yes yes yes yes yes Orci non pretium yes partial - - - Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus tellus non sem sollicitudin, quis rutrum leo facilisis. Nulla tempor lobortis orci, at elementum urna sodales vitae. In in vehicula nulla, quis ornare libero. Left Center Right Lorem dolor amet ipsum sit Vestibulum vitae orci quis ante viverra ultricies ut eget turpis. Sed eu lectus dapibus, eleifend nulla varius, lobortis turpis. In ac hendrerit nisl, sit amet laoreet nibh. Table with colgroups (Pandoc) Lorem ipsum dolor sit amet. Sed sagittis eleifend rutrum. Donec vitae suscipit est.","title":"Data tables"},{"location":"Colabora/extensions/admonition/","text":"Admonition \u00b6 Admonition is an extension included in the standard Markdown library that makes it possible to add block-styled side content to your documentation, for example summaries, notes, hints or warnings. Installation \u00b6 Add the following lines to your mkdocs.yml : markdown_extensions : - admonition Usage \u00b6 Admonition blocks follow a simple syntax: every block is started with !!! , followed by a single keyword which is used as the type qualifier of the block. The content of the block then follows on the next line, indented by four spaces. Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Changing the title \u00b6 By default, the block title will equal the type qualifier in titlecase. However, it can easily be changed by adding a quoted string after the type qualifier. Example: !!! note \"Phasellus posuere in sem ut cursus\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Removing the title \u00b6 Similar to setting a custom title , the icon and title can be omitted by providing an empty string after the type qualifier: Example: !!! note \"\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Embedded code blocks \u00b6 Blocks can contain all kinds of text content, including headlines, lists, paragraphs and other blocks \u2013 except code blocks, because the parser from the standard Markdown library does not account for those. However, the PyMdown Extensions package adds an extension called SuperFences , which makes it possible to nest code blocks within other blocks, respectively Admonition blocks. Example: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. SELECT Employees . EmployeeID , Employees . Name , Employees . Salary , Manager . Name AS Manager FROM Employees LEFT JOIN Employees AS Manager ON Employees . ManagerID = Manager . EmployeeID WHERE Employees . EmployeeID = '087652' ; Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim. Collapsible blocks \u00b6 The Details extension which is also part of the PyMdown Extensions package adds support for rendering collapsible Admonition blocks. This is useful for FAQs or content that is of secondary nature. Example: ??? note \"Phasellus posuere in sem ut cursus\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. By adding a + sign directly after the start marker, blocks can be rendered open by default. Types \u00b6 Admonition supports user-defined type qualifiers which may influence the style of the inserted block. Following is a list of type qualifiers provided by the Material theme, whereas the default type, and thus fallback for unknown type qualifiers, is note . Note \u00b6 Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: note seealso Abstract \u00b6 Example: !!! abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: abstract summary tldr Info \u00b6 Example: !!! info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: info todo Tip \u00b6 Example: !!! tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: tip hint important Success \u00b6 Example: !!! success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: success check done Question \u00b6 Example: !!! question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: question help faq Warning \u00b6 Example: !!! warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: warning caution attention Failure \u00b6 Example: !!! failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: failure fail missing Danger \u00b6 Example: !!! danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: danger error Bug \u00b6 Example: !!! bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: bug Example \u00b6 Example: !!! example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: example snippet Quote \u00b6 Example: !!! quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: quote cite","title":"Admonition"},{"location":"Colabora/extensions/admonition/#admonition","text":"Admonition is an extension included in the standard Markdown library that makes it possible to add block-styled side content to your documentation, for example summaries, notes, hints or warnings.","title":"Admonition"},{"location":"Colabora/extensions/admonition/#installation","text":"Add the following lines to your mkdocs.yml : markdown_extensions : - admonition","title":"Installation"},{"location":"Colabora/extensions/admonition/#usage","text":"Admonition blocks follow a simple syntax: every block is started with !!! , followed by a single keyword which is used as the type qualifier of the block. The content of the block then follows on the next line, indented by four spaces. Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Usage"},{"location":"Colabora/extensions/admonition/#changing-the-title","text":"By default, the block title will equal the type qualifier in titlecase. However, it can easily be changed by adding a quoted string after the type qualifier. Example: !!! note \"Phasellus posuere in sem ut cursus\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Changing the title"},{"location":"Colabora/extensions/admonition/#removing-the-title","text":"Similar to setting a custom title , the icon and title can be omitted by providing an empty string after the type qualifier: Example: !!! note \"\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Removing the title"},{"location":"Colabora/extensions/admonition/#embedded-code-blocks","text":"Blocks can contain all kinds of text content, including headlines, lists, paragraphs and other blocks \u2013 except code blocks, because the parser from the standard Markdown library does not account for those. However, the PyMdown Extensions package adds an extension called SuperFences , which makes it possible to nest code blocks within other blocks, respectively Admonition blocks. Example: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. SELECT Employees . EmployeeID , Employees . Name , Employees . Salary , Manager . Name AS Manager FROM Employees LEFT JOIN Employees AS Manager ON Employees . ManagerID = Manager . EmployeeID WHERE Employees . EmployeeID = '087652' ; Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim.","title":"Embedded code blocks"},{"location":"Colabora/extensions/admonition/#collapsible-blocks","text":"The Details extension which is also part of the PyMdown Extensions package adds support for rendering collapsible Admonition blocks. This is useful for FAQs or content that is of secondary nature. Example: ??? note \"Phasellus posuere in sem ut cursus\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. By adding a + sign directly after the start marker, blocks can be rendered open by default.","title":"Collapsible blocks"},{"location":"Colabora/extensions/admonition/#types","text":"Admonition supports user-defined type qualifiers which may influence the style of the inserted block. Following is a list of type qualifiers provided by the Material theme, whereas the default type, and thus fallback for unknown type qualifiers, is note .","title":"Types"},{"location":"Colabora/extensions/admonition/#note","text":"Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: note seealso","title":"Note"},{"location":"Colabora/extensions/admonition/#abstract","text":"Example: !!! abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: abstract summary tldr","title":"Abstract"},{"location":"Colabora/extensions/admonition/#info","text":"Example: !!! info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: info todo","title":"Info"},{"location":"Colabora/extensions/admonition/#tip","text":"Example: !!! tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: tip hint important","title":"Tip"},{"location":"Colabora/extensions/admonition/#success","text":"Example: !!! success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: success check done","title":"Success"},{"location":"Colabora/extensions/admonition/#question","text":"Example: !!! question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: question help faq","title":"Question"},{"location":"Colabora/extensions/admonition/#warning","text":"Example: !!! warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: warning caution attention","title":"Warning"},{"location":"Colabora/extensions/admonition/#failure","text":"Example: !!! failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: failure fail missing","title":"Failure"},{"location":"Colabora/extensions/admonition/#danger","text":"Example: !!! danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: danger error","title":"Danger"},{"location":"Colabora/extensions/admonition/#bug","text":"Example: !!! bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: bug","title":"Bug"},{"location":"Colabora/extensions/admonition/#example","text":"Example: !!! example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: example snippet","title":"Example"},{"location":"Colabora/extensions/admonition/#quote","text":"Example: !!! quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: quote cite","title":"Quote"},{"location":"Colabora/extensions/codehilite/","text":"CodeHilite \u00b6 CodeHilite is an extension that adds syntax highlighting to code blocks and is included in the standard Markdown library. The highlighting process is executed during compilation of the Markdown file. Syntax highlighting not working? Please ensure that Pygments is installed. See the next section for further directions on how to set up Pygments or use the official Docker image with all dependencies pre-installed. Installation \u00b6 CodeHilite parses code blocks and wraps them in pre tags. If Pygments is installed, which is a generic syntax highlighter with support for over 300 languages , CodeHilite will also highlight the code block. Pygments can be installed with the following command: pip install pygments To enable CodeHilite, add the following lines to your mkdocs.yml : markdown_extensions : - codehilite Usage \u00b6 Specifying the language \u00b6 The CodeHilite extension uses the same syntax as regular Markdown code blocks, but needs to know the language of the code block. This can be done in three different ways. via Markdown syntax recommended \u00b6 In Markdown, code blocks can be opened and closed by writing three backticks on separate lines. To add code highlighting to those blocks, the easiest way is to specify the language directly after the opening block. Example: ``` python import tensorflow as tf ``` Result: import tensorflow as tf via Shebang \u00b6 Alternatively, if the first line of a code block contains a shebang, the language is derived from the path referenced in the shebang. This will only work for code blocks that are indented using four spaces, not for those encapsulated in three backticks. Example: #!/usr/bin/python import tensorflow as tf Result: #!/usr/bin/python import tensorflow as tf via three colons \u00b6 If the first line starts with three colons followed by a language identifier, the first line is stripped. This will only work for code blocks that are indented using four spaces, not for those encapsulated in three backticks. Example: :::python import tensorflow as tf Result: import tensorflow as tf Adding line numbers \u00b6 Line numbers can be added by enabling the linenums flag in your mkdocs.yml : markdown_extensions : - codehilite : linenums : true Example: ``` python \"\"\" Bubble sort \"\"\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Result: 1 2 3 4 5 6 \"\"\" Bubble sort \"\"\" def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Grouping code blocks \u00b6 The SuperFences extension which is part of the PyMdown Extensions package adds support for grouping code blocks with tabs. This is especially useful for documenting projects with multiple language bindings. Example: ``` bash tab=\"Bash\" #!/bin/bash echo \"Hello world!\" ``` ``` c tab=\"C\" #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); } ``` ``` c++ tab=\"C++\" #include <iostream> int main() { std::cout << \"Hello world!\" << std::endl; return 0; } ``` ``` c# tab=\"C#\" using System; class Program { static void Main(string[] args) { Console.WriteLine(\"Hello world!\"); } } ``` Result: Bash #!/bin/bash echo \"Hello world!\" C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); } C++ #include <iostream> int main () { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } C# using System ; class Program { static void Main ( string [] args ) { Console . WriteLine ( \"Hello world!\" ); } } Highlighting specific lines \u00b6 Specific lines can be highlighted by passing the line numbers to the hl_lines argument placed right after the language identifier. Line counts start at 1. Example: ``` python hl_lines=\"3 4\" \"\"\" Bubble sort \"\"\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Result: 1 2 3 4 5 6 \"\"\" Bubble sort \"\"\" def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] Supported languages excerpt \u00b6 CodeHilite uses Pygments , a generic syntax highlighter with support for over 300 languages , so the following list of examples is just an excerpt. Bash \u00b6 #!/bin/bash for OPT in \" $@ \" do case \" $OPT \" in '-f' ) canonicalize = 1 ;; '-n' ) switchlf = \"-n\" ;; esac done # readlink -f function __readlink_f { target = \" $1 \" while test -n \" $target \" ; do filepath = \" $target \" cd ` dirname \" $filepath \" ` target = ` readlink \" $filepath \" ` done /bin/echo $switchlf ` pwd -P ` / ` basename \" $filepath \" ` } if [ ! \" $canonicalize \" ] ; then readlink $switchlf \" $@ \" else for file in \" $@ \" do case \" $file \" in -* ) ;; * ) __readlink_f \" $file \" ;; esac done fi exit $? C \u00b6 extern size_t pb_varint_scan ( const uint8_t data [], size_t left ) { assert ( data && left ); left = left > 10 ? 10 : left ; #ifdef __SSE2__ /* Mapping: remaining bytes ==> bitmask */ static const int mask_map [] = { 0x0000 , 0x0001 , 0x0003 , 0x0007 , 0x000F , 0x001F , 0x003F , 0x007F , 0x00FF , 0x01FF , 0x03FF }; /* Load buffer into 128-bit integer and create high-bit mask */ __m128i temp = _mm_loadu_si128 (( const __m128i * ) data ); __m128i high = _mm_set1_epi8 ( 0x80 ); /* Intersect and extract mask with high-bits set */ int mask = _mm_movemask_epi8 ( _mm_and_si128 ( temp , high )); mask = ( mask & mask_map [ left ]) ^ mask_map [ left ]; /* Count trailing zeroes */ return mask ? __builtin_ctz ( mask ) + 1 : 0 ; #else /* Linear scan */ size_t size = 0 ; while ( data [ size ++ ] & 0x80 ) if ( !-- left ) return 0 ; return size ; #endif /* __SSE2__ */ } C++ \u00b6 Extension :: Extension ( const Descriptor * descriptor , const Descriptor * scope ) : descriptor_ ( descriptor ), scope_ ( scope ) { /* Extract full name for signature */ variables_ [ \"signature\" ] = descriptor_ -> full_name (); /* Prepare message symbol */ variables_ [ \"message\" ] = StringReplace ( variables_ [ \"signature\" ], \".\" , \"_\" , true ); LowerString ( & ( variables_ [ \"message\" ])); /* Suffix scope to identifiers, if given */ string suffix ( \"\" ); if ( scope_ ) { suffix = scope_ -> full_name (); /* Check if the base and extension types are in the same package */ if ( ! scope_ -> file () -> package (). compare ( descriptor_ -> file () -> package ())) suffix = StripPrefixString ( suffix , scope_ -> file () -> package () + \".\" ); /* Append to signature */ variables_ [ \"signature\" ] += \".[\" + suffix + \"]\" ; suffix = \"_\" + suffix ; } /* Prepare extension symbol */ variables_ [ \"extension\" ] = StringReplace ( suffix , \".\" , \"_\" , true ); LowerString ( & ( variables_ [ \"extension\" ])); } C# \u00b6 public static void Send ( Socket socket , byte [] buffer , int offset , int size , int timeout ) { int startTickCount = Environment . TickCount ; int sent = 0 ; do { if ( Environment . TickCount > startTickCount + timeout ) throw new Exception ( \"Timeout.\" ); try { sent += socket . Send ( buffer , offset + sent , size - sent , SocketFlags . None ); } catch ( SocketException ex ) { if ( ex . SocketErrorCode == SocketError . WouldBlock || ex . SocketErrorCode == SocketError . IOPending || ex . SocketErrorCode == SocketError . NoBufferSpaceAvailable ) { /* Socket buffer is probably full, wait and try again */ Thread . Sleep ( 30 ); } else { throw ex ; } } } while ( sent < size ); } Clojure \u00b6 ( clojure-version ) ( defn partition-when [ f ] ( fn [ rf ] ( let [ a ( java.util.ArrayList. ) fval ( volatile! false )] ( fn ([] ( rf )) ([ result ] ( let [ result ( if ( .isEmpty a ) result ( let [ v ( vec ( .toArray a ))] ;; Clear first ( .clear a ) ( unreduced ( rf result v ))))] ( rf result ))) ([ result input ] ( if-not ( and ( f input ) @ fval ) ( do ( vreset! fval true ) ( .add a input ) result ) ( let [ v ( vec ( .toArray a ))] ( .clear a ) ( let [ ret ( rf result v )] ( when-not ( reduced? ret ) ( .add a input )) ret )))))))) ( into [] ( partition-when # ( .startsWith % \">>\" )) [ \"1d\" \"33\" \">> 1\" \">> 2\" \"22\" \">> 3\" ]) Diff \u00b6 Index: grunt.js =================================================================== --- grunt.js (revision 31200) +++ grunt.js (working copy) @@ -12,6 +12,7 @@ module.exports = function (grunt) { + console.log('hello world'); // Project configuration. grunt.initConfig({ lint: { @@ -19,10 +20,6 @@ 'packages/services.web/{!(test)/**/,}*.js', 'packages/error/**/*.js' ], - scripts: [ - 'grunt.js', - 'db/**/*.js' - ], browser: [ 'packages/web/server.js', 'packages/web/server/**/*.js', Docker \u00b6 FROM ubuntu # Install vnc, xvfb in order to create a 'fake' display and firefox RUN apt-get update && apt-get install -y x11vnc xvfb firefox RUN mkdir ~/.vnc # Setup a password RUN x11vnc -storepasswd 1234 ~/.vnc/passwd # Autostart firefox (might not be the best way, but it does the trick) RUN bash -c 'echo \"firefox\" >> /.bashrc' EXPOSE 5900 CMD [ \"x11vnc\" , \"-forever\" , \"-usepw\" , \"-create\" ] Elixir \u00b6 require Logger def accept ( port ) do { :ok , socket } = :gen_tcp . listen ( port , [ :binary , packet : :line , active : false , reuseaddr : true ]) Logger . info \"Accepting connections on port #{ port } \" loop_acceptor ( socket ) end defp loop_acceptor ( socket ) do { :ok , client } = :gen_tcp . accept ( socket ) serve ( client ) loop_acceptor ( socket ) end defp serve ( socket ) do socket |> read_line () |> write_line ( socket ) serve ( socket ) end defp read_line ( socket ) do { :ok , data } = :gen_tcp . recv ( socket , 0 ) data end defp write_line ( line , socket ) do :gen_tcp . send ( socket , line ) end Erlang \u00b6 circular ( Defs ) -> [ { { Type , Base }, Fields } || { { Type , Base }, Fields } <- Defs , Type == msg , circular ( Base , Defs ) ]. circular ( Base , Defs ) -> Fields = proplists : get_value ({ msg , Base }, Defs ), circular ( Defs , Fields , [ Base ]). circular (_ Defs , [], _ Path ) -> false ; circular ( Defs , [ Field | Fields ], Path ) -> case Field #field.type of { msg , Type } -> case lists : member ( Type , Path ) of false -> Children = proplists : get_value ({ msg , Type }, Defs ), case circular ( Defs , Children , [ Type | Path ]) of false -> circular ( Defs , Fields , Path ); true -> true end ; true -> Type == lists : last ( Path ) andalso ( length ( Path ) == 1 orelse not is_tree ( Path )) end ; _ -> circular ( Defs , Fields , Path ) end . F# \u00b6 /// Asynchronously download retangles from the server /// and decode the JSON format to F# Rectangle record let [< Js >] getRectangles () : Async < Rectangle [] > = async { let req = XMLHttpRequest () req . Open ( \"POST\" , \"/get\" , true ) let! resp = req . AsyncSend () return JSON . parse ( resp ) } /// Repeatedly update rectangles after 0.5 sec let [< Js >] updateLoop () = async { while true do do ! Async . Sleep ( 500 ) let! rects = getRectangles () cleanRectangles () rects |> Array . iter createRectangle } Go \u00b6 package main import \"fmt\" func counter ( id int , channel chan int , closer bool ) { for i := 0 ; i < 10000000 ; i ++ { fmt . Println ( \"process\" , id , \" send\" , i ) channel <- 1 } if closer { close ( channel ) } } func main () { channel := make ( chan int ) go counter ( 1 , channel , false ) go counter ( 2 , channel , true ) x := 0 // receiving data from channel for i := range channel { fmt . Println ( \"receiving\" ) x += i } fmt . Println ( x ) } HTML \u00b6 <!doctype html> < html class = \"no-js\" lang = \"\" > < head > < meta charset = \"utf-8\" > < meta http-equiv = \"x-ua-compatible\" content = \"ie=edge\" > < title > HTML5 Boilerplate </ title > < meta name = \"description\" content = \"\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1\" > < link rel = \"apple-touch-icon\" href = \"apple-touch-icon.png\" > < link rel = \"stylesheet\" href = \"css/normalize.css\" > < link rel = \"stylesheet\" href = \"css/main.css\" > < script src = \"js/vendor/modernizr-2.8.3.min.js\" ></ script > </ head > < body > < p > Hello world! This is HTML5 Boilerplate. </ p > </ body > </ html > Java \u00b6 import java.util.LinkedList ; import java.lang.reflect.Array ; public class UnsortedHashSet < E > { private static final double LOAD_FACTOR_LIMIT = 0.7 ; private int size ; private LinkedList < E >[] con ; public UnsortedHashSet () { con = ( LinkedList < E >[] )( new LinkedList [ 10 ] ); } public boolean add ( E obj ) { int oldSize = size ; int index = Math . abs ( obj . hashCode ()) % con . length ; if ( con [ index ] == null ) con [ index ] = new LinkedList < E > (); if ( ! con [ index ] . contains ( obj )) { con [ index ] . add ( obj ); size ++ ; } if ( 1.0 * size / con . length > LOAD_FACTOR_LIMIT ) resize (); return oldSize != size ; } private void resize () { UnsortedHashSet < E > temp = new UnsortedHashSet < E > (); temp . con = ( LinkedList < E >[] )( new LinkedList [ con . length * 2 + 1 ] ); for ( int i = 0 ; i < con . length ; i ++ ) { if ( con [ i ] != null ) for ( E e : con [ i ] ) temp . add ( e ); } con = temp . con ; } public int size () { return size ; } } JavaScript \u00b6 var Math = require ( 'lib/math' ); var _extends = function ( target ) { for ( var i = 1 ; i < arguments . length ; i ++ ) { var source = arguments [ i ]; for ( var key in source ) { target [ key ] = source [ key ]; } } return target ; }; var e = exports . e = 2.71828182846 ; exports [ 'default' ] = function ( x ) { return Math . exp ( x ); }; module . exports = _extends ( exports [ 'default' ], exports ); JSON \u00b6 { \"name\" : \"mkdocs-material\" , \"version\" : \"0.2.4\" , \"description\" : \"A Material Design theme for MkDocs\" , \"homepage\" : \"http://squidfunk.github.io/mkdocs-material/\" , \"authors\" : [ \"squidfunk <martin.donath@squidfunk.com>\" ], \"license\" : \"MIT\" , \"main\" : \"Gulpfile.js\" , \"scripts\" : { \"start\" : \"./node_modules/.bin/gulp watch --mkdocs\" , \"build\" : \"./node_modules/.bin/gulp build --production\" } ... } Julia \u00b6 using MXNet mlp = @mx . chain mx . Variable ( : data ) => mx . FullyConnected ( name =: fc1 , num_hidden = 128 ) => mx . Activation ( name =: relu1 , act_type =: relu ) => mx . FullyConnected ( name =: fc2 , num_hidden = 64 ) => mx . Activation ( name =: relu2 , act_type =: relu ) => mx . FullyConnected ( name =: fc3 , num_hidden = 10 ) => mx . SoftmaxOutput ( name =: softmax ) # data provider batch_size = 100 include ( Pkg . dir ( \"MXNet\" , \"examples\" , \"mnist\" , \"mnist-data.jl\" )) train_provider , eval_provider = get_mnist_providers ( batch_size ) # setup model model = mx . FeedForward ( mlp , context = mx . cpu ()) # optimization algorithm optimizer = mx . SGD ( lr = 0.1 , momentum = 0.9 ) # fit parameters mx . fit ( model , optimizer , train_provider , n_epoch = 20 , eval_data = eval_provider ) Lua \u00b6 local ffi = require ( \"ffi\" ) ffi . cdef [[ void Sleep(int ms); int poll(struct pollfd *fds, unsigned long nfds, int timeout); ]] local sleep if ffi . os == \"Windows\" then function sleep ( s ) ffi . C . Sleep ( s * 1000 ) end else function sleep ( s ) ffi . C . poll ( nil , 0 , s * 1000 ) end end for i = 1 , 160 do io.write ( \".\" ); io.flush () sleep ( 0.01 ) end io.write ( \" \\n \" ) MySQL \u00b6 SELECT Employees . EmployeeID , Employees . Name , Employees . Salary , Manager . Name AS Manager FROM Employees LEFT JOIN Employees AS Manager ON Employees . ManagerID = Manager . EmployeeID WHERE Employees . EmployeeID = '087652' ; PHP \u00b6 <?php // src/AppBundle/Controller/LuckyController.php namespace AppBundle\\Controller ; use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route ; use Symfony\\Component\\HttpFoundation\\Response ; class LuckyController { /** * @Route(\"/lucky/number\") */ public function numberAction () { $number = mt_rand ( 0 , 100 ); return new Response ( '<html><body>Lucky number: ' . $number . '</body></html>' ); } } Protocol Buffers \u00b6 syntax = \"proto2\" ; package caffe ; // Specifies the shape (dimensions) of a Blob. message BlobShape { repeated int64 dim = 1 [ packed = true ]; } message BlobProto { optional BlobShape shape = 7 ; repeated float data = 5 [ packed = true ]; repeated float diff = 6 [ packed = true ]; // 4D dimensions -- deprecated. Use \"shape\" instead. optional int32 num = 1 [ default = 0 ]; optional int32 channels = 2 [ default = 0 ]; optional int32 height = 3 [ default = 0 ]; optional int32 width = 4 [ default = 0 ]; } Python \u00b6 \"\"\" A very simple MNIST classifier. See extensive documentation at http://tensorflow.org/tutorials/mnist/beginners/index.md \"\"\" from __future__ import absolute_import from __future__ import division from __future__ import print_function # Import data from tensorflow.examples.tutorials.mnist import input_data import tensorflow as tf flags = tf . app . flags FLAGS = flags . FLAGS flags . DEFINE_string ( 'data_dir' , '/tmp/data/' , 'Directory for storing data' ) mnist = input_data . read_data_sets ( FLAGS . data_dir , one_hot = True ) sess = tf . InteractiveSession () # Create the model x = tf . placeholder ( tf . float32 , [ None , 784 ]) W = tf . Variable ( tf . zeros ([ 784 , 10 ])) b = tf . Variable ( tf . zeros ([ 10 ])) y = tf . nn . softmax ( tf . matmul ( x , W ) + b ) Ruby \u00b6 require 'finity/event' require 'finity/machine' require 'finity/state' require 'finity/transition' require 'finity/version' module Finity class InvalidCallback < StandardError ; end class MissingCallback < StandardError ; end class InvalidState < StandardError ; end # Class methods to be injected into the including class upon inclusion. module ClassMethods # Instantiate a new state machine for the including class by accepting a # block with state and event (and subsequent transition) definitions. def finity options = {}, & block @finity ||= Machine . new self , options , & block end # Return the names of all registered states. def states @finity . states . map { | name , _ | name } end # Return the names of all registered events. def events @finity . events . map { | name , _ | name } end end # Inject methods into the including class upon inclusion. def self . included base base . extend ClassMethods end end XML \u00b6 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE mainTag SYSTEM \"some.dtd\" [ENTITY % entity]> <?oxygen RNGSchema=\"some.rng\" type=\"xml\"?> <xs:main-Tag xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" > <!-- This is a sample comment --> <childTag attribute= \"Quoted Value\" another-attribute= 'Single quoted value' a-third-attribute= '123' > <withTextContent> Some text content </withTextContent> <withEntityContent> Some text content with &lt; entities &gt; and mentioning uint8_t and int32_t </withEntityContent> <otherTag attribute= 'Single quoted Value' /> </childTag> <![CDATA[ some CData ]]> </main-Tag>","title":"CodeHilite"},{"location":"Colabora/extensions/codehilite/#codehilite","text":"CodeHilite is an extension that adds syntax highlighting to code blocks and is included in the standard Markdown library. The highlighting process is executed during compilation of the Markdown file. Syntax highlighting not working? Please ensure that Pygments is installed. See the next section for further directions on how to set up Pygments or use the official Docker image with all dependencies pre-installed.","title":"CodeHilite"},{"location":"Colabora/extensions/codehilite/#installation","text":"CodeHilite parses code blocks and wraps them in pre tags. If Pygments is installed, which is a generic syntax highlighter with support for over 300 languages , CodeHilite will also highlight the code block. Pygments can be installed with the following command: pip install pygments To enable CodeHilite, add the following lines to your mkdocs.yml : markdown_extensions : - codehilite","title":"Installation"},{"location":"Colabora/extensions/codehilite/#usage","text":"","title":"Usage"},{"location":"Colabora/extensions/codehilite/#specifying-the-language","text":"The CodeHilite extension uses the same syntax as regular Markdown code blocks, but needs to know the language of the code block. This can be done in three different ways.","title":"Specifying the language"},{"location":"Colabora/extensions/codehilite/#via-markdown-syntax-recommended","text":"In Markdown, code blocks can be opened and closed by writing three backticks on separate lines. To add code highlighting to those blocks, the easiest way is to specify the language directly after the opening block. Example: ``` python import tensorflow as tf ``` Result: import tensorflow as tf","title":"via Markdown syntax recommended"},{"location":"Colabora/extensions/codehilite/#via-shebang","text":"Alternatively, if the first line of a code block contains a shebang, the language is derived from the path referenced in the shebang. This will only work for code blocks that are indented using four spaces, not for those encapsulated in three backticks. Example: #!/usr/bin/python import tensorflow as tf Result: #!/usr/bin/python import tensorflow as tf","title":"via Shebang"},{"location":"Colabora/extensions/codehilite/#via-three-colons","text":"If the first line starts with three colons followed by a language identifier, the first line is stripped. This will only work for code blocks that are indented using four spaces, not for those encapsulated in three backticks. Example: :::python import tensorflow as tf Result: import tensorflow as tf","title":"via three colons"},{"location":"Colabora/extensions/codehilite/#adding-line-numbers","text":"Line numbers can be added by enabling the linenums flag in your mkdocs.yml : markdown_extensions : - codehilite : linenums : true Example: ``` python \"\"\" Bubble sort \"\"\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Result: 1 2 3 4 5 6 \"\"\" Bubble sort \"\"\" def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]","title":"Adding line numbers"},{"location":"Colabora/extensions/codehilite/#grouping-code-blocks","text":"The SuperFences extension which is part of the PyMdown Extensions package adds support for grouping code blocks with tabs. This is especially useful for documenting projects with multiple language bindings. Example: ``` bash tab=\"Bash\" #!/bin/bash echo \"Hello world!\" ``` ``` c tab=\"C\" #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); } ``` ``` c++ tab=\"C++\" #include <iostream> int main() { std::cout << \"Hello world!\" << std::endl; return 0; } ``` ``` c# tab=\"C#\" using System; class Program { static void Main(string[] args) { Console.WriteLine(\"Hello world!\"); } } ``` Result: Bash #!/bin/bash echo \"Hello world!\" C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); } C++ #include <iostream> int main () { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } C# using System ; class Program { static void Main ( string [] args ) { Console . WriteLine ( \"Hello world!\" ); } }","title":"Grouping code blocks"},{"location":"Colabora/extensions/codehilite/#highlighting-specific-lines","text":"Specific lines can be highlighted by passing the line numbers to the hl_lines argument placed right after the language identifier. Line counts start at 1. Example: ``` python hl_lines=\"3 4\" \"\"\" Bubble sort \"\"\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Result: 1 2 3 4 5 6 \"\"\" Bubble sort \"\"\" def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]","title":"Highlighting specific lines"},{"location":"Colabora/extensions/codehilite/#supported-languages-excerpt","text":"CodeHilite uses Pygments , a generic syntax highlighter with support for over 300 languages , so the following list of examples is just an excerpt.","title":"Supported languages excerpt"},{"location":"Colabora/extensions/codehilite/#bash","text":"#!/bin/bash for OPT in \" $@ \" do case \" $OPT \" in '-f' ) canonicalize = 1 ;; '-n' ) switchlf = \"-n\" ;; esac done # readlink -f function __readlink_f { target = \" $1 \" while test -n \" $target \" ; do filepath = \" $target \" cd ` dirname \" $filepath \" ` target = ` readlink \" $filepath \" ` done /bin/echo $switchlf ` pwd -P ` / ` basename \" $filepath \" ` } if [ ! \" $canonicalize \" ] ; then readlink $switchlf \" $@ \" else for file in \" $@ \" do case \" $file \" in -* ) ;; * ) __readlink_f \" $file \" ;; esac done fi exit $?","title":"Bash"},{"location":"Colabora/extensions/codehilite/#c","text":"extern size_t pb_varint_scan ( const uint8_t data [], size_t left ) { assert ( data && left ); left = left > 10 ? 10 : left ; #ifdef __SSE2__ /* Mapping: remaining bytes ==> bitmask */ static const int mask_map [] = { 0x0000 , 0x0001 , 0x0003 , 0x0007 , 0x000F , 0x001F , 0x003F , 0x007F , 0x00FF , 0x01FF , 0x03FF }; /* Load buffer into 128-bit integer and create high-bit mask */ __m128i temp = _mm_loadu_si128 (( const __m128i * ) data ); __m128i high = _mm_set1_epi8 ( 0x80 ); /* Intersect and extract mask with high-bits set */ int mask = _mm_movemask_epi8 ( _mm_and_si128 ( temp , high )); mask = ( mask & mask_map [ left ]) ^ mask_map [ left ]; /* Count trailing zeroes */ return mask ? __builtin_ctz ( mask ) + 1 : 0 ; #else /* Linear scan */ size_t size = 0 ; while ( data [ size ++ ] & 0x80 ) if ( !-- left ) return 0 ; return size ; #endif /* __SSE2__ */ }","title":"C"},{"location":"Colabora/extensions/codehilite/#c_1","text":"Extension :: Extension ( const Descriptor * descriptor , const Descriptor * scope ) : descriptor_ ( descriptor ), scope_ ( scope ) { /* Extract full name for signature */ variables_ [ \"signature\" ] = descriptor_ -> full_name (); /* Prepare message symbol */ variables_ [ \"message\" ] = StringReplace ( variables_ [ \"signature\" ], \".\" , \"_\" , true ); LowerString ( & ( variables_ [ \"message\" ])); /* Suffix scope to identifiers, if given */ string suffix ( \"\" ); if ( scope_ ) { suffix = scope_ -> full_name (); /* Check if the base and extension types are in the same package */ if ( ! scope_ -> file () -> package (). compare ( descriptor_ -> file () -> package ())) suffix = StripPrefixString ( suffix , scope_ -> file () -> package () + \".\" ); /* Append to signature */ variables_ [ \"signature\" ] += \".[\" + suffix + \"]\" ; suffix = \"_\" + suffix ; } /* Prepare extension symbol */ variables_ [ \"extension\" ] = StringReplace ( suffix , \".\" , \"_\" , true ); LowerString ( & ( variables_ [ \"extension\" ])); }","title":"C++"},{"location":"Colabora/extensions/codehilite/#c_2","text":"public static void Send ( Socket socket , byte [] buffer , int offset , int size , int timeout ) { int startTickCount = Environment . TickCount ; int sent = 0 ; do { if ( Environment . TickCount > startTickCount + timeout ) throw new Exception ( \"Timeout.\" ); try { sent += socket . Send ( buffer , offset + sent , size - sent , SocketFlags . None ); } catch ( SocketException ex ) { if ( ex . SocketErrorCode == SocketError . WouldBlock || ex . SocketErrorCode == SocketError . IOPending || ex . SocketErrorCode == SocketError . NoBufferSpaceAvailable ) { /* Socket buffer is probably full, wait and try again */ Thread . Sleep ( 30 ); } else { throw ex ; } } } while ( sent < size ); }","title":"C&#35;"},{"location":"Colabora/extensions/codehilite/#clojure","text":"( clojure-version ) ( defn partition-when [ f ] ( fn [ rf ] ( let [ a ( java.util.ArrayList. ) fval ( volatile! false )] ( fn ([] ( rf )) ([ result ] ( let [ result ( if ( .isEmpty a ) result ( let [ v ( vec ( .toArray a ))] ;; Clear first ( .clear a ) ( unreduced ( rf result v ))))] ( rf result ))) ([ result input ] ( if-not ( and ( f input ) @ fval ) ( do ( vreset! fval true ) ( .add a input ) result ) ( let [ v ( vec ( .toArray a ))] ( .clear a ) ( let [ ret ( rf result v )] ( when-not ( reduced? ret ) ( .add a input )) ret )))))))) ( into [] ( partition-when # ( .startsWith % \">>\" )) [ \"1d\" \"33\" \">> 1\" \">> 2\" \"22\" \">> 3\" ])","title":"Clojure"},{"location":"Colabora/extensions/codehilite/#diff","text":"Index: grunt.js =================================================================== --- grunt.js (revision 31200) +++ grunt.js (working copy) @@ -12,6 +12,7 @@ module.exports = function (grunt) { + console.log('hello world'); // Project configuration. grunt.initConfig({ lint: { @@ -19,10 +20,6 @@ 'packages/services.web/{!(test)/**/,}*.js', 'packages/error/**/*.js' ], - scripts: [ - 'grunt.js', - 'db/**/*.js' - ], browser: [ 'packages/web/server.js', 'packages/web/server/**/*.js',","title":"Diff"},{"location":"Colabora/extensions/codehilite/#docker","text":"FROM ubuntu # Install vnc, xvfb in order to create a 'fake' display and firefox RUN apt-get update && apt-get install -y x11vnc xvfb firefox RUN mkdir ~/.vnc # Setup a password RUN x11vnc -storepasswd 1234 ~/.vnc/passwd # Autostart firefox (might not be the best way, but it does the trick) RUN bash -c 'echo \"firefox\" >> /.bashrc' EXPOSE 5900 CMD [ \"x11vnc\" , \"-forever\" , \"-usepw\" , \"-create\" ]","title":"Docker"},{"location":"Colabora/extensions/codehilite/#elixir","text":"require Logger def accept ( port ) do { :ok , socket } = :gen_tcp . listen ( port , [ :binary , packet : :line , active : false , reuseaddr : true ]) Logger . info \"Accepting connections on port #{ port } \" loop_acceptor ( socket ) end defp loop_acceptor ( socket ) do { :ok , client } = :gen_tcp . accept ( socket ) serve ( client ) loop_acceptor ( socket ) end defp serve ( socket ) do socket |> read_line () |> write_line ( socket ) serve ( socket ) end defp read_line ( socket ) do { :ok , data } = :gen_tcp . recv ( socket , 0 ) data end defp write_line ( line , socket ) do :gen_tcp . send ( socket , line ) end","title":"Elixir"},{"location":"Colabora/extensions/codehilite/#erlang","text":"circular ( Defs ) -> [ { { Type , Base }, Fields } || { { Type , Base }, Fields } <- Defs , Type == msg , circular ( Base , Defs ) ]. circular ( Base , Defs ) -> Fields = proplists : get_value ({ msg , Base }, Defs ), circular ( Defs , Fields , [ Base ]). circular (_ Defs , [], _ Path ) -> false ; circular ( Defs , [ Field | Fields ], Path ) -> case Field #field.type of { msg , Type } -> case lists : member ( Type , Path ) of false -> Children = proplists : get_value ({ msg , Type }, Defs ), case circular ( Defs , Children , [ Type | Path ]) of false -> circular ( Defs , Fields , Path ); true -> true end ; true -> Type == lists : last ( Path ) andalso ( length ( Path ) == 1 orelse not is_tree ( Path )) end ; _ -> circular ( Defs , Fields , Path ) end .","title":"Erlang"},{"location":"Colabora/extensions/codehilite/#f","text":"/// Asynchronously download retangles from the server /// and decode the JSON format to F# Rectangle record let [< Js >] getRectangles () : Async < Rectangle [] > = async { let req = XMLHttpRequest () req . Open ( \"POST\" , \"/get\" , true ) let! resp = req . AsyncSend () return JSON . parse ( resp ) } /// Repeatedly update rectangles after 0.5 sec let [< Js >] updateLoop () = async { while true do do ! Async . Sleep ( 500 ) let! rects = getRectangles () cleanRectangles () rects |> Array . iter createRectangle }","title":"F&#35;"},{"location":"Colabora/extensions/codehilite/#go","text":"package main import \"fmt\" func counter ( id int , channel chan int , closer bool ) { for i := 0 ; i < 10000000 ; i ++ { fmt . Println ( \"process\" , id , \" send\" , i ) channel <- 1 } if closer { close ( channel ) } } func main () { channel := make ( chan int ) go counter ( 1 , channel , false ) go counter ( 2 , channel , true ) x := 0 // receiving data from channel for i := range channel { fmt . Println ( \"receiving\" ) x += i } fmt . Println ( x ) }","title":"Go"},{"location":"Colabora/extensions/codehilite/#html","text":"<!doctype html> < html class = \"no-js\" lang = \"\" > < head > < meta charset = \"utf-8\" > < meta http-equiv = \"x-ua-compatible\" content = \"ie=edge\" > < title > HTML5 Boilerplate </ title > < meta name = \"description\" content = \"\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1\" > < link rel = \"apple-touch-icon\" href = \"apple-touch-icon.png\" > < link rel = \"stylesheet\" href = \"css/normalize.css\" > < link rel = \"stylesheet\" href = \"css/main.css\" > < script src = \"js/vendor/modernizr-2.8.3.min.js\" ></ script > </ head > < body > < p > Hello world! This is HTML5 Boilerplate. </ p > </ body > </ html >","title":"HTML"},{"location":"Colabora/extensions/codehilite/#java","text":"import java.util.LinkedList ; import java.lang.reflect.Array ; public class UnsortedHashSet < E > { private static final double LOAD_FACTOR_LIMIT = 0.7 ; private int size ; private LinkedList < E >[] con ; public UnsortedHashSet () { con = ( LinkedList < E >[] )( new LinkedList [ 10 ] ); } public boolean add ( E obj ) { int oldSize = size ; int index = Math . abs ( obj . hashCode ()) % con . length ; if ( con [ index ] == null ) con [ index ] = new LinkedList < E > (); if ( ! con [ index ] . contains ( obj )) { con [ index ] . add ( obj ); size ++ ; } if ( 1.0 * size / con . length > LOAD_FACTOR_LIMIT ) resize (); return oldSize != size ; } private void resize () { UnsortedHashSet < E > temp = new UnsortedHashSet < E > (); temp . con = ( LinkedList < E >[] )( new LinkedList [ con . length * 2 + 1 ] ); for ( int i = 0 ; i < con . length ; i ++ ) { if ( con [ i ] != null ) for ( E e : con [ i ] ) temp . add ( e ); } con = temp . con ; } public int size () { return size ; } }","title":"Java"},{"location":"Colabora/extensions/codehilite/#javascript","text":"var Math = require ( 'lib/math' ); var _extends = function ( target ) { for ( var i = 1 ; i < arguments . length ; i ++ ) { var source = arguments [ i ]; for ( var key in source ) { target [ key ] = source [ key ]; } } return target ; }; var e = exports . e = 2.71828182846 ; exports [ 'default' ] = function ( x ) { return Math . exp ( x ); }; module . exports = _extends ( exports [ 'default' ], exports );","title":"JavaScript"},{"location":"Colabora/extensions/codehilite/#json","text":"{ \"name\" : \"mkdocs-material\" , \"version\" : \"0.2.4\" , \"description\" : \"A Material Design theme for MkDocs\" , \"homepage\" : \"http://squidfunk.github.io/mkdocs-material/\" , \"authors\" : [ \"squidfunk <martin.donath@squidfunk.com>\" ], \"license\" : \"MIT\" , \"main\" : \"Gulpfile.js\" , \"scripts\" : { \"start\" : \"./node_modules/.bin/gulp watch --mkdocs\" , \"build\" : \"./node_modules/.bin/gulp build --production\" } ... }","title":"JSON"},{"location":"Colabora/extensions/codehilite/#julia","text":"using MXNet mlp = @mx . chain mx . Variable ( : data ) => mx . FullyConnected ( name =: fc1 , num_hidden = 128 ) => mx . Activation ( name =: relu1 , act_type =: relu ) => mx . FullyConnected ( name =: fc2 , num_hidden = 64 ) => mx . Activation ( name =: relu2 , act_type =: relu ) => mx . FullyConnected ( name =: fc3 , num_hidden = 10 ) => mx . SoftmaxOutput ( name =: softmax ) # data provider batch_size = 100 include ( Pkg . dir ( \"MXNet\" , \"examples\" , \"mnist\" , \"mnist-data.jl\" )) train_provider , eval_provider = get_mnist_providers ( batch_size ) # setup model model = mx . FeedForward ( mlp , context = mx . cpu ()) # optimization algorithm optimizer = mx . SGD ( lr = 0.1 , momentum = 0.9 ) # fit parameters mx . fit ( model , optimizer , train_provider , n_epoch = 20 , eval_data = eval_provider )","title":"Julia"},{"location":"Colabora/extensions/codehilite/#lua","text":"local ffi = require ( \"ffi\" ) ffi . cdef [[ void Sleep(int ms); int poll(struct pollfd *fds, unsigned long nfds, int timeout); ]] local sleep if ffi . os == \"Windows\" then function sleep ( s ) ffi . C . Sleep ( s * 1000 ) end else function sleep ( s ) ffi . C . poll ( nil , 0 , s * 1000 ) end end for i = 1 , 160 do io.write ( \".\" ); io.flush () sleep ( 0.01 ) end io.write ( \" \\n \" )","title":"Lua"},{"location":"Colabora/extensions/codehilite/#mysql","text":"SELECT Employees . EmployeeID , Employees . Name , Employees . Salary , Manager . Name AS Manager FROM Employees LEFT JOIN Employees AS Manager ON Employees . ManagerID = Manager . EmployeeID WHERE Employees . EmployeeID = '087652' ;","title":"MySQL"},{"location":"Colabora/extensions/codehilite/#php","text":"<?php // src/AppBundle/Controller/LuckyController.php namespace AppBundle\\Controller ; use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route ; use Symfony\\Component\\HttpFoundation\\Response ; class LuckyController { /** * @Route(\"/lucky/number\") */ public function numberAction () { $number = mt_rand ( 0 , 100 ); return new Response ( '<html><body>Lucky number: ' . $number . '</body></html>' ); } }","title":"PHP"},{"location":"Colabora/extensions/codehilite/#protocol-buffers","text":"syntax = \"proto2\" ; package caffe ; // Specifies the shape (dimensions) of a Blob. message BlobShape { repeated int64 dim = 1 [ packed = true ]; } message BlobProto { optional BlobShape shape = 7 ; repeated float data = 5 [ packed = true ]; repeated float diff = 6 [ packed = true ]; // 4D dimensions -- deprecated. Use \"shape\" instead. optional int32 num = 1 [ default = 0 ]; optional int32 channels = 2 [ default = 0 ]; optional int32 height = 3 [ default = 0 ]; optional int32 width = 4 [ default = 0 ]; }","title":"Protocol Buffers"},{"location":"Colabora/extensions/codehilite/#python","text":"\"\"\" A very simple MNIST classifier. See extensive documentation at http://tensorflow.org/tutorials/mnist/beginners/index.md \"\"\" from __future__ import absolute_import from __future__ import division from __future__ import print_function # Import data from tensorflow.examples.tutorials.mnist import input_data import tensorflow as tf flags = tf . app . flags FLAGS = flags . FLAGS flags . DEFINE_string ( 'data_dir' , '/tmp/data/' , 'Directory for storing data' ) mnist = input_data . read_data_sets ( FLAGS . data_dir , one_hot = True ) sess = tf . InteractiveSession () # Create the model x = tf . placeholder ( tf . float32 , [ None , 784 ]) W = tf . Variable ( tf . zeros ([ 784 , 10 ])) b = tf . Variable ( tf . zeros ([ 10 ])) y = tf . nn . softmax ( tf . matmul ( x , W ) + b )","title":"Python"},{"location":"Colabora/extensions/codehilite/#ruby","text":"require 'finity/event' require 'finity/machine' require 'finity/state' require 'finity/transition' require 'finity/version' module Finity class InvalidCallback < StandardError ; end class MissingCallback < StandardError ; end class InvalidState < StandardError ; end # Class methods to be injected into the including class upon inclusion. module ClassMethods # Instantiate a new state machine for the including class by accepting a # block with state and event (and subsequent transition) definitions. def finity options = {}, & block @finity ||= Machine . new self , options , & block end # Return the names of all registered states. def states @finity . states . map { | name , _ | name } end # Return the names of all registered events. def events @finity . events . map { | name , _ | name } end end # Inject methods into the including class upon inclusion. def self . included base base . extend ClassMethods end end","title":"Ruby"},{"location":"Colabora/extensions/codehilite/#xml","text":"<?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE mainTag SYSTEM \"some.dtd\" [ENTITY % entity]> <?oxygen RNGSchema=\"some.rng\" type=\"xml\"?> <xs:main-Tag xmlns:xs= \"http://www.w3.org/2001/XMLSchema\" > <!-- This is a sample comment --> <childTag attribute= \"Quoted Value\" another-attribute= 'Single quoted value' a-third-attribute= '123' > <withTextContent> Some text content </withTextContent> <withEntityContent> Some text content with &lt; entities &gt; and mentioning uint8_t and int32_t </withEntityContent> <otherTag attribute= 'Single quoted Value' /> </childTag> <![CDATA[ some CData ]]> </main-Tag>","title":"XML"},{"location":"Colabora/extensions/footnotes/","text":"Footnotes \u00b6 Footnotes is another extension included in the standard Markdown library. As the name says, it adds the ability to add footnotes to your documentation. Installation \u00b6 Add the following lines to your mkdocs.yml : markdown_extensions : - footnotes Usage \u00b6 The markup for footnotes is similar to the standard Markdown markup for links. A reference is inserted in the text, which can then be defined at any point in the document. Inserting the reference \u00b6 The footnote reference is enclosed in square brackets and starts with a caret, followed by an arbitrary label which may contain numeric identifiers [1, 2, 3, ...] or names [Granovetter et al. 1998]. The rendered references are always consecutive superscripted numbers. Example: Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2] Result: Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit. ^2 Inserting the content \u00b6 The footnote content is also declared with a label, which must match the label used for the footnote reference. It can be inserted at an arbitrary position in the document and is always rendered at the bottom of the page. Furthermore, a backlink is automatically added to the footnote reference. on a single line \u00b6 Short statements can be written on the same line. Example: [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Result: Jump to footnote at the bottom of the page [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. on multiple lines \u00b6 Paragraphs should be written on the next line. As with all Markdown blocks, the content must be indented by four spaces. Example: [^2]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Jump to footnote at the bottom of the page","title":"Footnotes"},{"location":"Colabora/extensions/footnotes/#footnotes","text":"Footnotes is another extension included in the standard Markdown library. As the name says, it adds the ability to add footnotes to your documentation.","title":"Footnotes"},{"location":"Colabora/extensions/footnotes/#installation","text":"Add the following lines to your mkdocs.yml : markdown_extensions : - footnotes","title":"Installation"},{"location":"Colabora/extensions/footnotes/#usage","text":"The markup for footnotes is similar to the standard Markdown markup for links. A reference is inserted in the text, which can then be defined at any point in the document.","title":"Usage"},{"location":"Colabora/extensions/footnotes/#inserting-the-reference","text":"The footnote reference is enclosed in square brackets and starts with a caret, followed by an arbitrary label which may contain numeric identifiers [1, 2, 3, ...] or names [Granovetter et al. 1998]. The rendered references are always consecutive superscripted numbers. Example: Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2] Result: Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit. ^2","title":"Inserting the reference"},{"location":"Colabora/extensions/footnotes/#inserting-the-content","text":"The footnote content is also declared with a label, which must match the label used for the footnote reference. It can be inserted at an arbitrary position in the document and is always rendered at the bottom of the page. Furthermore, a backlink is automatically added to the footnote reference.","title":"Inserting the content"},{"location":"Colabora/extensions/footnotes/#on-a-single-line","text":"Short statements can be written on the same line. Example: [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Result: Jump to footnote at the bottom of the page [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit.","title":"on a single line"},{"location":"Colabora/extensions/footnotes/#on-multiple-lines","text":"Paragraphs should be written on the next line. As with all Markdown blocks, the content must be indented by four spaces. Example: [^2]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Jump to footnote at the bottom of the page","title":"on multiple lines"},{"location":"Colabora/extensions/metadata/","text":"Metadata \u00b6 The Metadata extension makes it possible to add metadata to a document which gives more control over the theme in a page-specific context. Installation \u00b6 Add the following lines to your mkdocs.yml : markdown_extensions : - meta Usage \u00b6 Metadata is written as a series of key-value pairs at the beginning of the Markdown document, delimited by a blank line which ends the metadata context. Naturally, the metadata is stripped from the document before rendering the actual page content and made available to the theme. Example: title: Lorem ipsum dolor sit amet description: Nullam urna elit, malesuada eget finibus ut, ac tortor. path: path/to/file source: file.js # Headline ... See the next section which covers the metadata that is supported by Material. Setting a hero text \u00b6 Material exposes a simple text-only page-local hero via Metadata, as you can see on the current page when you scroll to the top. It's as simple as: hero: Metadata enables hero teaser texts Linking sources \u00b6 When a document is related to a specific set of source files and the repo_url is defined inside the project's mkdocs.yml , the files can be linked using the source key: source: file.js The filename is appended to the repo_url set in your mkdocs.yml , but can be prefixed with a path to ensure correct path resolving: Example: path: tree/master/docs/extensions source: metadata.md Result: See the source section for the resulting output. Redirecting to another page \u00b6 It's sometimes necessary to move documents around in the navigation tree and redirect user from the old URL to the new one. The redirect meta-tag allows to create a redirection from the current document to the address specified in the tag. For instance, if your document contains: redirect: /new/url accessing that document's URL will automatically redirect to /new/url . Overrides \u00b6 Page title \u00b6 The page title can be overridden on a per-document level: title: Lorem ipsum dolor sit amet This will set the title tag inside the document head for the current page to the provided value. It will also override the default behavior of Material for MkDocs which appends the site title using a dash as a separator to the page title. Page description \u00b6 The page description can also be overridden on a per-document level: description : Nullam urna elit, malesuada eget finibus ut, ac tortor. This will set the meta tag containing the site description inside the document head for the current page to the provided value. Disqus \u00b6 As described in the getting started guide, the Disqus comments section can be enabled on a per-document level: disqus: your-shortname Disqus can be disabled for a specific page by setting it to an empty value: disqus:","title":"Metadata"},{"location":"Colabora/extensions/metadata/#metadata","text":"The Metadata extension makes it possible to add metadata to a document which gives more control over the theme in a page-specific context.","title":"Metadata"},{"location":"Colabora/extensions/metadata/#installation","text":"Add the following lines to your mkdocs.yml : markdown_extensions : - meta","title":"Installation"},{"location":"Colabora/extensions/metadata/#usage","text":"Metadata is written as a series of key-value pairs at the beginning of the Markdown document, delimited by a blank line which ends the metadata context. Naturally, the metadata is stripped from the document before rendering the actual page content and made available to the theme. Example: title: Lorem ipsum dolor sit amet description: Nullam urna elit, malesuada eget finibus ut, ac tortor. path: path/to/file source: file.js # Headline ... See the next section which covers the metadata that is supported by Material.","title":"Usage"},{"location":"Colabora/extensions/metadata/#setting-a-hero-text","text":"Material exposes a simple text-only page-local hero via Metadata, as you can see on the current page when you scroll to the top. It's as simple as: hero: Metadata enables hero teaser texts","title":"Setting a hero text"},{"location":"Colabora/extensions/metadata/#linking-sources","text":"When a document is related to a specific set of source files and the repo_url is defined inside the project's mkdocs.yml , the files can be linked using the source key: source: file.js The filename is appended to the repo_url set in your mkdocs.yml , but can be prefixed with a path to ensure correct path resolving: Example: path: tree/master/docs/extensions source: metadata.md Result: See the source section for the resulting output.","title":"Linking sources"},{"location":"Colabora/extensions/metadata/#redirecting-to-another-page","text":"It's sometimes necessary to move documents around in the navigation tree and redirect user from the old URL to the new one. The redirect meta-tag allows to create a redirection from the current document to the address specified in the tag. For instance, if your document contains: redirect: /new/url accessing that document's URL will automatically redirect to /new/url .","title":"Redirecting to another page"},{"location":"Colabora/extensions/metadata/#overrides","text":"","title":"Overrides"},{"location":"Colabora/extensions/metadata/#page-title","text":"The page title can be overridden on a per-document level: title: Lorem ipsum dolor sit amet This will set the title tag inside the document head for the current page to the provided value. It will also override the default behavior of Material for MkDocs which appends the site title using a dash as a separator to the page title.","title":"Page title"},{"location":"Colabora/extensions/metadata/#page-description","text":"The page description can also be overridden on a per-document level: description : Nullam urna elit, malesuada eget finibus ut, ac tortor. This will set the meta tag containing the site description inside the document head for the current page to the provided value.","title":"Page description"},{"location":"Colabora/extensions/metadata/#disqus","text":"As described in the getting started guide, the Disqus comments section can be enabled on a per-document level: disqus: your-shortname Disqus can be disabled for a specific page by setting it to an empty value: disqus:","title":"Disqus"},{"location":"Colabora/extensions/permalinks/","text":"Permalinks \u00b6 Permalinks are a feature of the Table of Contents extension, which is part of the standard Markdown library. The extension inserts an anchor at the end of each headline, which makes it possible to directly link to a subpart of the document. Installation \u00b6 To enable permalinks, add the following to your mkdocs.yml : markdown_extensions : - toc : permalink : true This will add a link containing the paragraph symbol \u00b6 at the end of each headline (exactly like on the page you're currently viewing), which the Material theme will make appear on hover. In order to change the text of the permalink, a string can be passed, e.g.: markdown_extensions: - toc: permalink: Link Usage \u00b6 When enabled, permalinks are inserted automatically.","title":"Permalinks"},{"location":"Colabora/extensions/permalinks/#permalinks","text":"Permalinks are a feature of the Table of Contents extension, which is part of the standard Markdown library. The extension inserts an anchor at the end of each headline, which makes it possible to directly link to a subpart of the document.","title":"Permalinks"},{"location":"Colabora/extensions/permalinks/#installation","text":"To enable permalinks, add the following to your mkdocs.yml : markdown_extensions : - toc : permalink : true This will add a link containing the paragraph symbol \u00b6 at the end of each headline (exactly like on the page you're currently viewing), which the Material theme will make appear on hover. In order to change the text of the permalink, a string can be passed, e.g.: markdown_extensions: - toc: permalink: Link","title":"Installation"},{"location":"Colabora/extensions/permalinks/#usage","text":"When enabled, permalinks are inserted automatically.","title":"Usage"},{"location":"Colabora/extensions/pymdown/","text":"PyMdown Extensions \u00b6 PyMdown Extensions is a collection of Markdown extensions that add some great features to the standard Markdown library. For this reason, the installation of this package is highly recommended as it's well-integrated with the Material theme. Installation \u00b6 The PyMdown Extensions package can be installed with the following command: pip install pymdown-extensions The following list of extensions that are part of the PyMdown Extensions package are recommended to be used together with the Material theme: markdown_extensions : - pymdownx.arithmatex - pymdownx.betterem : smart_enable : all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji : emoji_generator : !!python/name:pymdownx.emoji.to_svg - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.tasklist : custom_checkbox : true - pymdownx.tilde Usage \u00b6 Arithmatex MathJax \u00b6 Arithmatex integrates Material with MathJax which parses block-style and inline equations written in TeX markup and outputs them in mathematical notation. See this thread for a short introduction and quick reference on how to write equations in TeX syntax. Besides activating the extension in the mkdocs.yml , the MathJax JavaScript runtime needs to be included. This must be done with additional JavaScript: extra_javascript : - 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML' If you want to override the default MathJax configuration, you can do this by adding another JavaScript file before the MathJax runtime in extra_javascript which contains your MathJax configuration, e.g.: window . MathJax = { tex2jax : { inlineMath : [ [ \"\\\\(\" , \"\\\\)\" ] ], displayMath : [ [ \"\\\\[\" , \"\\\\]\" ] ] }, TeX : { TagSide : \"right\" , TagIndent : \".8em\" , MultLineWidth : \"85%\" , equationNumbers : { autoNumber : \"AMS\" , }, unicode : { fonts : \"STIXGeneral,'Arial Unicode MS'\" } }, displayAlign : \"left\" , showProcessingMessages : false , messageStyle : \"none\" }; In your mkdocs.yml , include it with: extra_javascript : - 'javascripts/extra.js' - 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML' Blocks \u00b6 Blocks are enclosed in $$ ... $$ which are placed on separate lines. Example: $$ \\frac {n ! }{k !( n - k )! } = \\binom {n}{k} $$ Result: \\frac{n!}{k!(n-k)!} = \\binom{n}{k} \\frac{n!}{k!(n-k)!} = \\binom{n}{k} Inline \u00b6 Inline equations need to be enclosed in $ ... $ : Example: Lorem ipsum dolor sit amet: $ p ( x|y ) = \\frac {p ( y|x ) p ( x ) }{p ( y ) } $ Result: Lorem ipsum dolor sit amet: p(x|y) = \\frac{p(y|x)p(x)}{p(y)} p(x|y) = \\frac{p(y|x)p(x)}{p(y)} BetterEm \u00b6 BetterEm improves the handling of emphasis markup ( bold and italic ) within Markdown by providing a more sophisticated parser for better detecting start and end tokens. Read the documentation for usage notes . Caret \u00b6 Caret makes it possible to highlight inserted text . The portion of text that should be marked as added must be enclosed in two carets ^^...^^ . Critic \u00b6 Critic implements Critic Markup , a Markdown extension that enables the tracking of changes (additions, deletions and comments) on documents. During compilation of the Markdown document, changes can be rendered (default), accepted or rejected. Text can be deleted and replacement text added . This can also be combined into one a single operation. Highlighting is also possible and comments can be added inline . Formatting can also be applied to blocks, by putting the opening and closing tags on separate lines and adding new lines between the tags and the content. Details \u00b6 Details adds collapsible Admonition-style blocks which can contain arbitrary content using the HTML5 details and summary tags. Additionally, all Admonition qualifiers can be used, e.g. note , question , warning etc.: How many Prolog programmers does it take to change a lightbulb? Yes. Emoji \u00b6 Emoji adds the ability to insert a -load of emojis that we use in our daily lives. See the EmojiOne demo for a list of all available emojis. Happy scrolling Legal disclaimer Material has no affiliation with EmojiOne which is released under CC BY 4.0 . When including EmojiOne images or CSS, please read the EmojiOne license to ensure proper usage and attribution. InlineHilite \u00b6 InlineHilite adds support for inline code highlighting. It's useful for short snippets included within body copy, e.g. var test = 0 ; and can be achieved by prefixing inline code with a shebang and language identifier, e.g. #!js . MagicLink \u00b6 MagicLink detects links in Markdown and auto-generates the necessary markup, so no special syntax is required. It auto-links http[s]:// and ftp:// links, as well as references to email addresses. Mark \u00b6 Mark adds the ability to highlight text like it was marked with a text marker . The portion of text that should be highlighted must be enclosed in two equal signs ==...== . SmartSymbols \u00b6 SmartSymbols converts markup for special characters into their corresponding symbols, e.g. arrows (\u2190, \u2192, \u2194), trademark and copyright symbols (\u00a9, \u2122, \u00ae) and fractions (\u00bd, \u00bc, ...). SuperFences \u00b6 SuperFences provides the ability to nest code blocks under blockquotes, lists and other block elements, which the Fenced Code Blocks extension from the standard Markdown library doesn't parse correctly. SuperFences does also allow grouping code blocks with tabs . Tasklist \u00b6 Tasklist adds support for styled checkbox lists. This is useful for keeping track of tasks and showing what has been done and has yet to be done. Checkbox lists are like regular lists, but prefixed with [ ] for empty or [x] for filled checkboxes. Example: * [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit * [x] Nulla lobortis egestas semper * [x] Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est * [ ] Vestibulum convallis sit amet nisi a tincidunt * [x] In hac habitasse platea dictumst * [x] In scelerisque nibh non dolor mollis congue sed et metus * [x] Sed egestas felis quis elit dapibus, ac aliquet turpis mattis * [ ] Praesent sed risus massa * [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque * [ ] Nulla vel eros venenatis, imperdiet enim id, faucibus nisi Result: Lorem ipsum dolor sit amet, consectetur adipiscing elit Nulla lobortis egestas semper Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Sed egestas felis quis elit dapibus, ac aliquet turpis mattis Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Nulla vel eros venenatis, imperdiet enim id, faucibus nisi Tilde \u00b6 Tilde provides an easy way to strike through cross out text. The portion of text that should be erased must be enclosed in two tildes ~~...~~ and the extension will take care of the rest.","title":"PyMdown Extensions"},{"location":"Colabora/extensions/pymdown/#pymdown-extensions","text":"PyMdown Extensions is a collection of Markdown extensions that add some great features to the standard Markdown library. For this reason, the installation of this package is highly recommended as it's well-integrated with the Material theme.","title":"PyMdown Extensions"},{"location":"Colabora/extensions/pymdown/#installation","text":"The PyMdown Extensions package can be installed with the following command: pip install pymdown-extensions The following list of extensions that are part of the PyMdown Extensions package are recommended to be used together with the Material theme: markdown_extensions : - pymdownx.arithmatex - pymdownx.betterem : smart_enable : all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji : emoji_generator : !!python/name:pymdownx.emoji.to_svg - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.tasklist : custom_checkbox : true - pymdownx.tilde","title":"Installation"},{"location":"Colabora/extensions/pymdown/#usage","text":"","title":"Usage"},{"location":"Colabora/extensions/pymdown/#arithmatex-mathjax","text":"Arithmatex integrates Material with MathJax which parses block-style and inline equations written in TeX markup and outputs them in mathematical notation. See this thread for a short introduction and quick reference on how to write equations in TeX syntax. Besides activating the extension in the mkdocs.yml , the MathJax JavaScript runtime needs to be included. This must be done with additional JavaScript: extra_javascript : - 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML' If you want to override the default MathJax configuration, you can do this by adding another JavaScript file before the MathJax runtime in extra_javascript which contains your MathJax configuration, e.g.: window . MathJax = { tex2jax : { inlineMath : [ [ \"\\\\(\" , \"\\\\)\" ] ], displayMath : [ [ \"\\\\[\" , \"\\\\]\" ] ] }, TeX : { TagSide : \"right\" , TagIndent : \".8em\" , MultLineWidth : \"85%\" , equationNumbers : { autoNumber : \"AMS\" , }, unicode : { fonts : \"STIXGeneral,'Arial Unicode MS'\" } }, displayAlign : \"left\" , showProcessingMessages : false , messageStyle : \"none\" }; In your mkdocs.yml , include it with: extra_javascript : - 'javascripts/extra.js' - 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML'","title":"Arithmatex MathJax"},{"location":"Colabora/extensions/pymdown/#blocks","text":"Blocks are enclosed in $$ ... $$ which are placed on separate lines. Example: $$ \\frac {n ! }{k !( n - k )! } = \\binom {n}{k} $$ Result: \\frac{n!}{k!(n-k)!} = \\binom{n}{k} \\frac{n!}{k!(n-k)!} = \\binom{n}{k}","title":"Blocks"},{"location":"Colabora/extensions/pymdown/#inline","text":"Inline equations need to be enclosed in $ ... $ : Example: Lorem ipsum dolor sit amet: $ p ( x|y ) = \\frac {p ( y|x ) p ( x ) }{p ( y ) } $ Result: Lorem ipsum dolor sit amet: p(x|y) = \\frac{p(y|x)p(x)}{p(y)} p(x|y) = \\frac{p(y|x)p(x)}{p(y)}","title":"Inline"},{"location":"Colabora/extensions/pymdown/#betterem","text":"BetterEm improves the handling of emphasis markup ( bold and italic ) within Markdown by providing a more sophisticated parser for better detecting start and end tokens. Read the documentation for usage notes .","title":"BetterEm"},{"location":"Colabora/extensions/pymdown/#caret","text":"Caret makes it possible to highlight inserted text . The portion of text that should be marked as added must be enclosed in two carets ^^...^^ .","title":"Caret"},{"location":"Colabora/extensions/pymdown/#critic","text":"Critic implements Critic Markup , a Markdown extension that enables the tracking of changes (additions, deletions and comments) on documents. During compilation of the Markdown document, changes can be rendered (default), accepted or rejected. Text can be deleted and replacement text added . This can also be combined into one a single operation. Highlighting is also possible and comments can be added inline . Formatting can also be applied to blocks, by putting the opening and closing tags on separate lines and adding new lines between the tags and the content.","title":"Critic"},{"location":"Colabora/extensions/pymdown/#details","text":"Details adds collapsible Admonition-style blocks which can contain arbitrary content using the HTML5 details and summary tags. Additionally, all Admonition qualifiers can be used, e.g. note , question , warning etc.: How many Prolog programmers does it take to change a lightbulb? Yes.","title":"Details"},{"location":"Colabora/extensions/pymdown/#emoji","text":"Emoji adds the ability to insert a -load of emojis that we use in our daily lives. See the EmojiOne demo for a list of all available emojis. Happy scrolling Legal disclaimer Material has no affiliation with EmojiOne which is released under CC BY 4.0 . When including EmojiOne images or CSS, please read the EmojiOne license to ensure proper usage and attribution.","title":"Emoji"},{"location":"Colabora/extensions/pymdown/#inlinehilite","text":"InlineHilite adds support for inline code highlighting. It's useful for short snippets included within body copy, e.g. var test = 0 ; and can be achieved by prefixing inline code with a shebang and language identifier, e.g. #!js .","title":"InlineHilite"},{"location":"Colabora/extensions/pymdown/#magiclink","text":"MagicLink detects links in Markdown and auto-generates the necessary markup, so no special syntax is required. It auto-links http[s]:// and ftp:// links, as well as references to email addresses.","title":"MagicLink"},{"location":"Colabora/extensions/pymdown/#mark","text":"Mark adds the ability to highlight text like it was marked with a text marker . The portion of text that should be highlighted must be enclosed in two equal signs ==...== .","title":"Mark"},{"location":"Colabora/extensions/pymdown/#smartsymbols","text":"SmartSymbols converts markup for special characters into their corresponding symbols, e.g. arrows (\u2190, \u2192, \u2194), trademark and copyright symbols (\u00a9, \u2122, \u00ae) and fractions (\u00bd, \u00bc, ...).","title":"SmartSymbols"},{"location":"Colabora/extensions/pymdown/#superfences","text":"SuperFences provides the ability to nest code blocks under blockquotes, lists and other block elements, which the Fenced Code Blocks extension from the standard Markdown library doesn't parse correctly. SuperFences does also allow grouping code blocks with tabs .","title":"SuperFences"},{"location":"Colabora/extensions/pymdown/#tasklist","text":"Tasklist adds support for styled checkbox lists. This is useful for keeping track of tasks and showing what has been done and has yet to be done. Checkbox lists are like regular lists, but prefixed with [ ] for empty or [x] for filled checkboxes. Example: * [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit * [x] Nulla lobortis egestas semper * [x] Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est * [ ] Vestibulum convallis sit amet nisi a tincidunt * [x] In hac habitasse platea dictumst * [x] In scelerisque nibh non dolor mollis congue sed et metus * [x] Sed egestas felis quis elit dapibus, ac aliquet turpis mattis * [ ] Praesent sed risus massa * [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque * [ ] Nulla vel eros venenatis, imperdiet enim id, faucibus nisi Result: Lorem ipsum dolor sit amet, consectetur adipiscing elit Nulla lobortis egestas semper Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est Vestibulum convallis sit amet nisi a tincidunt In hac habitasse platea dictumst In scelerisque nibh non dolor mollis congue sed et metus Sed egestas felis quis elit dapibus, ac aliquet turpis mattis Praesent sed risus massa Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque Nulla vel eros venenatis, imperdiet enim id, faucibus nisi","title":"Tasklist"},{"location":"Colabora/extensions/pymdown/#tilde","text":"Tilde provides an easy way to strike through cross out text. The portion of text that should be erased must be enclosed in two tildes ~~...~~ and the extension will take care of the rest.","title":"Tilde"},{"location":"Recursos/-DotCSV-/","text":"- DotCSV - \u00b6 RECURSOS DE IA \u00b6 PARA PASAR UNA BUENA CUARENTENA EN CASA \ud83d\ude37 Importante Este listado es parcial y no incluye todos los recursos disponibles online. En una futura revisi\u00f3n se realizar\u00e1 y difundir\u00e1 un listado m\u00e1s completo. Art\u00edculo relevante Covid-19, su comunidad y usted: una perspectiva de ciencia de datos \ud83d\udcf2 (Algunas) Lecturas online \u00b6 Distill.pub The Gradient QuantaMagazine \u00a1MUCHO M\u00c1S! \u00a1Blogs hay tant\u00edsimos que esta web os vendr\u00e1 bien! \u00a1MUCHO M\u00c1S! \u00a1Papers hay tant\u00edsimos que esta web os vendr\u00e1 bien! \ud83c\udf93 (Algunos) Cursos y MOOCs \u00b6 (B\u00e1sico) Elements of AI : Curso muy introductorio a conceptos de Machine Learning. (B\u00e1sico) Cursos dentro de Kaggle . (Medio) Curso de FastAI v3 (B\u00e1sico-Medio) Curso de Tensorflow . (B\u00e1sico) Machine Learning con R (Medio) Stanford CS221: Artificial Intelligence: Principles and Techniques | 2019 . (Medio) Stanford CS229 - Machine Learning | 2019 . (Medio) Stanford CS230 - Deep Learning | 201 . (Medio) CS231n: Convolutional Neural Networks for Visual Recognition | 2017 . \u00a1MUCHO M\u00c1S! Buscador de cursos online . \u00a1MUCHO M\u00c1S! (Avanzado) Gran listado de cursos avanzados de ML/DL . \ud83e\udde0 (Algunas) Comunidades online \u00b6 Machine Learning Hispano . Reddit r/MachineLearning/ Kaggle . Foros de FastAI . \ud83d\udcfa (Algunos) Canales de Youtube \u00b6 Arxiv Insights . Two Minute Paper . 3Blue1Brown . Code Bullet . Carykh . ... y DotCSV ... y NotCSV!!! \ud83d\udcda (Algunos) Libros \u00b6 (Medio) Libro de FastAI : Deep Learning for Coders with fastai and PyTorch. (Avanzado) Libro Pattern Recognition and Machine Learning . (Medio) Libro Deep Learning Book . (Medio) Libro The Elements of Statistical Learning . Libro de pago, pero truquito. Pod\u00e9is activar el trial de 10 d\u00edas en la web de O'Reilly. (B\u00e1sico-Medio) Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow . \ud83d\udd0a (Algunos) Podcasts \u00b6 This Week in ML & AI . Lex Fridman . Data Skeptic . Software 2.0 . \ud83d\udcfa (Algunas) Series de tem\u00e1tica tecnol\u00f3gica \u00b6 Cosmos Possible Worlds (Nueva temporada). Mr. Robot . Silicon Valley . Halt and Catch Fire . West World . Black Mirror . Love Death and Robots . Disfrutad, aprended y cuidaos! - DotCSV -","title":"- DotCSV -"},{"location":"Recursos/-DotCSV-/#-dotcsv-","text":"","title":"- DotCSV -"},{"location":"Recursos/-DotCSV-/#recursos-de-ia","text":"PARA PASAR UNA BUENA CUARENTENA EN CASA \ud83d\ude37 Importante Este listado es parcial y no incluye todos los recursos disponibles online. En una futura revisi\u00f3n se realizar\u00e1 y difundir\u00e1 un listado m\u00e1s completo. Art\u00edculo relevante Covid-19, su comunidad y usted: una perspectiva de ciencia de datos","title":"RECURSOS DE IA"},{"location":"Recursos/-DotCSV-/#algunas-lecturas-online","text":"Distill.pub The Gradient QuantaMagazine \u00a1MUCHO M\u00c1S! \u00a1Blogs hay tant\u00edsimos que esta web os vendr\u00e1 bien! \u00a1MUCHO M\u00c1S! \u00a1Papers hay tant\u00edsimos que esta web os vendr\u00e1 bien!","title":"\ud83d\udcf2 (Algunas) Lecturas online"},{"location":"Recursos/-DotCSV-/#algunos-cursos-y-moocs","text":"(B\u00e1sico) Elements of AI : Curso muy introductorio a conceptos de Machine Learning. (B\u00e1sico) Cursos dentro de Kaggle . (Medio) Curso de FastAI v3 (B\u00e1sico-Medio) Curso de Tensorflow . (B\u00e1sico) Machine Learning con R (Medio) Stanford CS221: Artificial Intelligence: Principles and Techniques | 2019 . (Medio) Stanford CS229 - Machine Learning | 2019 . (Medio) Stanford CS230 - Deep Learning | 201 . (Medio) CS231n: Convolutional Neural Networks for Visual Recognition | 2017 . \u00a1MUCHO M\u00c1S! Buscador de cursos online . \u00a1MUCHO M\u00c1S! (Avanzado) Gran listado de cursos avanzados de ML/DL .","title":"\ud83c\udf93 (Algunos) Cursos y MOOCs"},{"location":"Recursos/-DotCSV-/#algunas-comunidades-online","text":"Machine Learning Hispano . Reddit r/MachineLearning/ Kaggle . Foros de FastAI .","title":"\ud83e\udde0 (Algunas) Comunidades online"},{"location":"Recursos/-DotCSV-/#algunos-canales-de-youtube","text":"Arxiv Insights . Two Minute Paper . 3Blue1Brown . Code Bullet . Carykh . ... y DotCSV ... y NotCSV!!!","title":"\ud83d\udcfa (Algunos) Canales de Youtube"},{"location":"Recursos/-DotCSV-/#algunos-libros","text":"(Medio) Libro de FastAI : Deep Learning for Coders with fastai and PyTorch. (Avanzado) Libro Pattern Recognition and Machine Learning . (Medio) Libro Deep Learning Book . (Medio) Libro The Elements of Statistical Learning . Libro de pago, pero truquito. Pod\u00e9is activar el trial de 10 d\u00edas en la web de O'Reilly. (B\u00e1sico-Medio) Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow .","title":"\ud83d\udcda (Algunos) Libros"},{"location":"Recursos/-DotCSV-/#algunos-podcasts","text":"This Week in ML & AI . Lex Fridman . Data Skeptic . Software 2.0 .","title":"\ud83d\udd0a (Algunos) Podcasts"},{"location":"Recursos/-DotCSV-/#algunas-series-de-tematica-tecnologica","text":"Cosmos Possible Worlds (Nueva temporada). Mr. Robot . Silicon Valley . Halt and Catch Fire . West World . Black Mirror . Love Death and Robots . Disfrutad, aprended y cuidaos! - DotCSV -","title":"\ud83d\udcfa (Algunas) Series de tem\u00e1tica tecnol\u00f3gica"},{"location":"Recursos/Articulos/","text":"Listado de art\u00edculos propuestos por los miembros de la comunidad Machine Learning Hispano . Art\u00edculos \u00b6 \u00bfC\u00f3mo saber si est\u00e1 usando una IA? : \u00bfC\u00f3mo saber si est\u00e1 usando una IA? Desc\u00fabralo con este gr\u00e1fico. Introducci\u00f3n al \u00e1rbol de decisi\u00f3n en python : Descripci\u00f3n con ejemplo sobre como funciona el \u00e1rbol de decisi\u00f3n en python. Fases del proceso de Machine Learning : Para obtener buenos resultados en Machine Learning, debemos seguir este proceso.","title":"Articulos"},{"location":"Recursos/Articulos/#articulos","text":"\u00bfC\u00f3mo saber si est\u00e1 usando una IA? : \u00bfC\u00f3mo saber si est\u00e1 usando una IA? Desc\u00fabralo con este gr\u00e1fico. Introducci\u00f3n al \u00e1rbol de decisi\u00f3n en python : Descripci\u00f3n con ejemplo sobre como funciona el \u00e1rbol de decisi\u00f3n en python. Fases del proceso de Machine Learning : Para obtener buenos resultados en Machine Learning, debemos seguir este proceso.","title":"Art\u00edculos"},{"location":"Recursos/Cursos/","text":"Cursos \u00b6 CS229 - Machine Learning : Stanford Engineering Everywhere.","title":"Cursos"},{"location":"Recursos/Cursos/#cursos","text":"CS229 - Machine Learning : Stanford Engineering Everywhere.","title":"Cursos"},{"location":"Recursos/Libros/","text":"Listado de libros propuestos por los miembros de la comunidad Machine Learning Hispano . Libros \u00b6 Dive into Deep Learning : Libro interactivo sobre deep learning. Python Data Science Handbook : Libro de datascience online. Libros y recursos de Data Science : Libros y recursos de Data Science. Introducci\u00f3n a la miner\u00eda de datos : Libro de Introducci\u00f3n a la miner\u00eda de datos. Algebra, Topology, Differential Calculus, and Optimization : Libro que trata sobre \u00e1lgebra lineal, topolog\u00eda, c\u00e1lculo multivariable y optimizaci\u00f3n.","title":"Libros"},{"location":"Recursos/Libros/#libros","text":"Dive into Deep Learning : Libro interactivo sobre deep learning. Python Data Science Handbook : Libro de datascience online. Libros y recursos de Data Science : Libros y recursos de Data Science. Introducci\u00f3n a la miner\u00eda de datos : Libro de Introducci\u00f3n a la miner\u00eda de datos. Algebra, Topology, Differential Calculus, and Optimization : Libro que trata sobre \u00e1lgebra lineal, topolog\u00eda, c\u00e1lculo multivariable y optimizaci\u00f3n.","title":"Libros"},{"location":"Recursos/Papers/","text":"Papers \u00b6 BIGGAN: Large Scale GAN Training for High Fidelity Natural Image Synthesis A New Backpropagation Algorithm without Gradient Descent Deep Learning: An Introduction for Applied Mathematicians Dropout: A Simple Way to Prevent Neural Networks from Overfitting Efficent BackProp ImageNet Classification with Deep Convolutional Neural Networks Lesiones de estad\u00edstica y t\u00e9cnicas de clasificaci\u00f3n : Conocimiento general en estad\u00edstica y t\u00e9cnicas de clasificaci\u00f3n en espa\u00f1ol aplicables a machine learning Recursos de afshinea Hojas de referencia de Machine Learning (CS 229 Stanford) en espa\u00f1ol. Cheatsheet de Machine Learning muy completo Genial para esos momentos en los que vas leyendo un paper y no recuerdas que significaba ese acr\u00f3nimo tan raro. Most Cited Deep Learning Papers 2017 This list is not being maintained anymore because of the overwhelming amount of deep learning papers published every day since 2017. Papers with Code 2013-2018 Papers with Code 2013-2018.","title":"Papers"},{"location":"Recursos/Papers/#papers","text":"BIGGAN: Large Scale GAN Training for High Fidelity Natural Image Synthesis A New Backpropagation Algorithm without Gradient Descent Deep Learning: An Introduction for Applied Mathematicians Dropout: A Simple Way to Prevent Neural Networks from Overfitting Efficent BackProp ImageNet Classification with Deep Convolutional Neural Networks Lesiones de estad\u00edstica y t\u00e9cnicas de clasificaci\u00f3n : Conocimiento general en estad\u00edstica y t\u00e9cnicas de clasificaci\u00f3n en espa\u00f1ol aplicables a machine learning Recursos de afshinea Hojas de referencia de Machine Learning (CS 229 Stanford) en espa\u00f1ol. Cheatsheet de Machine Learning muy completo Genial para esos momentos en los que vas leyendo un paper y no recuerdas que significaba ese acr\u00f3nimo tan raro. Most Cited Deep Learning Papers 2017 This list is not being maintained anymore because of the overwhelming amount of deep learning papers published every day since 2017. Papers with Code 2013-2018 Papers with Code 2013-2018.","title":"Papers"},{"location":"Recursos/Proyectos/","text":"Proyectos \u00b6 Tensorflow \u00b6 Plantilla para un proyecto de Tensorflow - Una plantilla simple y bien dise\u00f1ada para empezar un proyecto en Tensorflow. Domain Transfer Network - Implementaci\u00f3n de un generador de imagenes no supervisado. Show, Attend and Tell - Generador de pie de foto para imagenes basado en atenci\u00f3n. SRGAN - Photo-Realistic Single Image Super-Resolution usando una GAN. Pretty Tensor - API que proporciona un builder de alto nivel para construir redes neuronales multicapa. Neural Style - Implementaci\u00f3n de estilo neuronal. Neural Style - Implementaci\u00f3n de estilo neuronal. AlexNet3D -Implementaci\u00f3n de AlexNet3D AlexNet con redes neuronales convolucionales (conv3d). Chatbot - Implementaci\u00f3n de los resultados de \"A neural conversational model\" (aka el chatbot de Google) Seq2seq-Chatbot - Chatbot en 200 l\u00edneas de c\u00f3digo GAN-CLS -GAN que convierte texto en imagen Colornet - NN para colorear im\u00e1genes - Red neuronal para colorizar im\u00e1genes en blanco y negro. Visualizaci\u00f3n de una CNN usando Tensorflow - Implementaci\u00f3n de Tensorflow de \"Visualizing and Understanding Convolutional Networks\" U-Net - Segmentaci\u00f3n de tumores cerebrales. Leer los labios - Cross Audio-Visual Recognition using 3D Architectures in TensorFlow - Implementaci\u00f3n de Tensorflow de \"Cross Audio-Visual Recognition in the Wild Using Deep Learning\" by Torfi et al. Tensorflow FastText - Classificador de texto Inspirado en fastText de Facebook MusicGenreClassification - Classificador de g\u00e9neros de m\u00fasica usando 10 segundos de sonido usando una red neuronal. Faceswap - Implementaci\u00f3n sencilla de faceswap","title":"Proyectos"},{"location":"Recursos/Proyectos/#proyectos","text":"","title":"Proyectos"},{"location":"Recursos/Proyectos/#tensorflow","text":"Plantilla para un proyecto de Tensorflow - Una plantilla simple y bien dise\u00f1ada para empezar un proyecto en Tensorflow. Domain Transfer Network - Implementaci\u00f3n de un generador de imagenes no supervisado. Show, Attend and Tell - Generador de pie de foto para imagenes basado en atenci\u00f3n. SRGAN - Photo-Realistic Single Image Super-Resolution usando una GAN. Pretty Tensor - API que proporciona un builder de alto nivel para construir redes neuronales multicapa. Neural Style - Implementaci\u00f3n de estilo neuronal. Neural Style - Implementaci\u00f3n de estilo neuronal. AlexNet3D -Implementaci\u00f3n de AlexNet3D AlexNet con redes neuronales convolucionales (conv3d). Chatbot - Implementaci\u00f3n de los resultados de \"A neural conversational model\" (aka el chatbot de Google) Seq2seq-Chatbot - Chatbot en 200 l\u00edneas de c\u00f3digo GAN-CLS -GAN que convierte texto en imagen Colornet - NN para colorear im\u00e1genes - Red neuronal para colorizar im\u00e1genes en blanco y negro. Visualizaci\u00f3n de una CNN usando Tensorflow - Implementaci\u00f3n de Tensorflow de \"Visualizing and Understanding Convolutional Networks\" U-Net - Segmentaci\u00f3n de tumores cerebrales. Leer los labios - Cross Audio-Visual Recognition using 3D Architectures in TensorFlow - Implementaci\u00f3n de Tensorflow de \"Cross Audio-Visual Recognition in the Wild Using Deep Learning\" by Torfi et al. Tensorflow FastText - Classificador de texto Inspirado en fastText de Facebook MusicGenreClassification - Classificador de g\u00e9neros de m\u00fasica usando 10 segundos de sonido usando una red neuronal. Faceswap - Implementaci\u00f3n sencilla de faceswap","title":"Tensorflow"},{"location":"Recursos/Videos/","text":"Canales \u00b6 Dot CSV : En este canal podr\u00e1s encontrar contenido explicando conceptos, programaci\u00f3n y noticias relacionadas a la inteligencia artificial. Arxiv Insights : Canal de youtube que tiene v\u00eddeos muy interesantes enfocados sobretodo al \u00e1rea de Aprendizaje Reforzado Listas \u00b6 Redes Neuronales - F\u00e1cil y desde cero - Javier Garcia Descubriendo la Inteligencia Artificial V\u00eddeos \u00b6 Modelo de Redes Neuronales Recurrentes para el An\u00e1lisis y Predicci\u00f3n de Series Temporales -PyConES17","title":"Videos"},{"location":"Recursos/Videos/#canales","text":"Dot CSV : En este canal podr\u00e1s encontrar contenido explicando conceptos, programaci\u00f3n y noticias relacionadas a la inteligencia artificial. Arxiv Insights : Canal de youtube que tiene v\u00eddeos muy interesantes enfocados sobretodo al \u00e1rea de Aprendizaje Reforzado","title":"Canales"},{"location":"Recursos/Videos/#listas","text":"Redes Neuronales - F\u00e1cil y desde cero - Javier Garcia Descubriendo la Inteligencia Artificial","title":"Listas"},{"location":"Recursos/Videos/#videos","text":"Modelo de Redes Neuronales Recurrentes para el An\u00e1lisis y Predicci\u00f3n de Series Temporales -PyConES17","title":"V\u00eddeos"}]}